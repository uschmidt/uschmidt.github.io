{"version":3,"sources":["webpack://dashjs/webpack/universalModuleDefinition","webpack://dashjs/webpack/bootstrap","webpack://dashjs/./node_modules/path-browserify/index.js","webpack://dashjs/./node_modules/process/browser.js","webpack://dashjs/./src/core/Utils.js","webpack://dashjs/./src/core/errors/ErrorsBase.js","webpack://dashjs/./src/core/events/EventsBase.js","webpack://dashjs/./src/streaming/constants/Constants.js","webpack://dashjs/./src/streaming/constants/ProtectionConstants.js","webpack://dashjs/./src/streaming/protection/CommonEncryption.js","webpack://dashjs/./src/streaming/protection/Protection.js","webpack://dashjs/./src/streaming/protection/ProtectionEvents.js","webpack://dashjs/./src/streaming/protection/controllers/ProtectionController.js","webpack://dashjs/./src/streaming/protection/controllers/ProtectionKeyController.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemClearKey.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemPlayReady.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemW3CClearKey.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemWidevine.js","webpack://dashjs/./src/streaming/protection/errors/ProtectionErrors.js","webpack://dashjs/./src/streaming/protection/models/ProtectionModel_01b.js","webpack://dashjs/./src/streaming/protection/models/ProtectionModel_21Jan2015.js","webpack://dashjs/./src/streaming/protection/models/ProtectionModel_3Feb2014.js","webpack://dashjs/./src/streaming/protection/servers/ClearKey.js","webpack://dashjs/./src/streaming/protection/servers/DRMToday.js","webpack://dashjs/./src/streaming/protection/servers/PlayReady.js","webpack://dashjs/./src/streaming/protection/servers/Widevine.js","webpack://dashjs/./src/streaming/protection/vo/ClearKeyKeySet.js","webpack://dashjs/./src/streaming/protection/vo/KeyMessage.js","webpack://dashjs/./src/streaming/protection/vo/KeyPair.js","webpack://dashjs/./src/streaming/protection/vo/KeySystemAccess.js","webpack://dashjs/./src/streaming/protection/vo/KeySystemConfiguration.js","webpack://dashjs/./src/streaming/protection/vo/LicenseRequest.js","webpack://dashjs/./src/streaming/protection/vo/LicenseResponse.js","webpack://dashjs/./src/streaming/protection/vo/MediaCapability.js","webpack://dashjs/./src/streaming/protection/vo/NeedKey.js","webpack://dashjs/./src/streaming/vo/DashJSError.js","webpack://dashjs/./src/streaming/vo/metrics/HTTPRequest.js"],"names":["Utils","dest","source","copy","s","empty","name","hasOwnProperty","mixin","src","r","Array","i","l","length","push","clone","url","params","modifiedUrl","URL","forEach","param","key","value","searchParams","set","href","e","headerStr","headers","headerPairs","trim","split","ilen","headerPair","index","indexOf","substring","dt","Date","getTime","uuid","replace","c","Math","random","floor","toString","string","hash","chr","charCodeAt","originalUrl","targetUrl","original","target","protocol","origin","relativePath","path","relative","pathname","substr","lastIndexOf","startIndexOffset","ErrorsBase","errors","config","override","publicOnly","err","EventsBase","events","evt","Constants","init","STREAM","VIDEO","AUDIO","TEXT","MUXED","IMAGE","STPP","TTML","VTT","WVTT","ABR_STRATEGY_DYNAMIC","ABR_STRATEGY_BOLA","ABR_STRATEGY_L2A","ABR_STRATEGY_LoLP","ABR_STRATEGY_THROUGHPUT","ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA","ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING","ABR_FETCH_THROUGHPUT_CALCULATION_AAST","LIVE_CATCHUP_MODE_DEFAULT","LIVE_CATCHUP_MODE_LOLP","MOVING_AVERAGE_SLIDING_WINDOW","MOVING_AVERAGE_EWMA","BAD_ARGUMENT_ERROR","MISSING_CONFIG_ERROR","TRACK_SWITCH_MODE_ALWAYS_REPLACE","TRACK_SWITCH_MODE_NEVER_REPLACE","TRACK_SELECTION_MODE_FIRST_TRACK","TRACK_SELECTION_MODE_HIGHEST_BITRATE","TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY","TRACK_SELECTION_MODE_WIDEST_RANGE","TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY","CMCD_MODE_QUERY","CMCD_MODE_HEADER","LOCATION","INITIALIZE","TEXT_SHOWING","TEXT_HIDDEN","CC1","CC3","UTF8","SCHEME_ID_URI","START_TIME","SERVICE_DESCRIPTION_LL_SCHEME","SUPPLEMENTAL_PROPERTY_LL_SCHEME","XML","ARRAY_BUFFER","DVB_REPORTING_URL","DVB_PROBABILITY","VIDEO_ELEMENT_READY_STATES","HAVE_NOTHING","HAVE_METADATA","HAVE_CURRENT_DATA","HAVE_FUTURE_DATA","HAVE_ENOUGH_DATA","constants","ProtectionConstants","CLEARKEY_KEYSTEM_STRING","WIDEVINE_KEYSTEM_STRING","PLAYREADY_KEYSTEM_STRING","CommonEncryption","cpArray","retVal","cp","schemeIdUri","toLowerCase","pssh","offset","view","DataView","version","getUint8","getUint32","slice","keySystem","initData","psshList","parsePSSHList","cpData","BASE64","__text","decodeArray","buffer","data","undefined","dv","done","byteCursor","size","nextBox","systemID","boxStart","byteLength","val","APIS_ProtectionModel_01b","generateKeyRequest","addKey","cancelKeyRequest","needkey","keyerror","keyadded","keymessage","APIS_ProtectionModel_3Feb2014","setMediaKeys","MediaKeys","release","error","message","ready","close","Protection","instance","context","createProtectionSystem","controller","protectionKeyController","ProtectionKeyController","getInstance","setConfig","debug","initialize","protectionModel","getProtectionModel","ProtectionController","create","eventBus","cmcdModel","settings","capabilities","setEncryptedMediaSupported","logger","getLogger","errHandler","videoElement","videoModel","getElement","onencrypted","mediaKeys","info","ProtectionModel_21Jan2015","getAPI","ProtectionModel_3Feb2014","api","ProtectionModel_01b","warn","apis","Object","keys","__dashjs_factory_name","factory","dashjs","FactoryMaker","getClassFactory","ProtectionEvents","ProtectionErrors","updateClassFactory","INTERNAL_KEY_MESSAGE","INTERNAL_KEY_SYSTEM_SELECTED","INTERNAL_KEY_STATUS_CHANGED","KEY_ADDED","KEY_ERROR","KEY_MESSAGE","KEY_SESSION_CLOSED","KEY_SESSION_CREATED","KEY_SESSION_REMOVED","KEY_STATUSES_CHANGED","KEY_SYSTEM_ACCESS_COMPLETE","KEY_SYSTEM_SELECTED","LICENSE_REQUEST_COMPLETE","LICENSE_REQUEST_SENDING","NEED_KEY","PROTECTION_CREATED","PROTECTION_DESTROYED","SERVER_CERTIFICATE_UPDATED","TEARDOWN_COMPLETE","VIDEO_ELEMENT_SELECTED","KEY_SESSION_UPDATED","protectionEvents","NEEDKEY_BEFORE_INITIALIZE_RETRIES","NEEDKEY_BEFORE_INITIALIZE_TIMEOUT","LICENSE_SERVER_REQUEST_RETRIES","LICENSE_SERVER_REQUEST_RETRY_INTERVAL","LICENSE_SERVER_REQUEST_DEFAULT_TIMEOUT","needkeyRetries","pendingNeedKeyData","mediaInfoArr","protDataSet","sessionType","robustnessLevel","licenseRequestFilters","licenseResponseFilters","setup","checkConfig","Error","initializeForMedia","mediaInfo","on","onKeyMessage","onKeyStatusChanged","supportedKS","getSupportedKeySystemsFromContentProtection","contentProtection","selectKeySystem","clearMediaInfoArrayByStreamId","streamId","filter","streamInfo","id","cps","createKeySession","cdmData","initDataForKS","getPSSHForKeySystem","protData","getProtData","_isInitDataDuplicate","getSessionType","trigger","DashJSError","KEY_SESSION_CREATED_ERROR_CODE","KEY_SESSION_CREATED_ERROR_MESSAGE","systemString","currentInitData","getAllInitData","initDataEquals","loadKeySession","sessionID","removeKeySession","sessionToken","closeKeySession","setServerCertificate","serverCertificate","setMediaElement","element","onNeedKey","off","setSessionType","setRobustnessLevel","level","setProtectionData","stop","reset","retryTimeout","clearTimeout","keySystemString","getKeySystemConfiguration","audioCapabilities","videoCapabilities","audioRobustness","videoRobustness","ksSessionType","distinctiveIdentifier","persistentState","media","type","MediaCapability","codec","KeySystemConfiguration","fromManifest","sort","ksA","ksB","indexA","ks","priority","indexB","_selectInitialKeySystem","_selectWithExistingKeySystem","self","requestedKeySystems","ksIdx","findIndex","entry","initDataForKs","configs","onKeySystemAccessComplete","event","KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE","KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE","isClearKey","kids","clearkeys","TextEncoder","encode","JSON","stringify","sessionId","requestKeySystemAccess","keySystemAccess","onKeySystemSelected","getKeySystem","sendLicenseRequestCompleteEvent","status","keyMessage","messageType","licenseServerData","getLicenseServer","eventData","MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE","MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE","getSessionID","processClearKeyLicenseRequest","updateKeySession","serverURL","laURL","getLicenseServerUrlFromMediaInfo","psshData","getPSSHData","getLicenseServerURLFromInitData","getServerURLFromMessage","MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE","MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE","reqHeaders","withCredentials","updateHeaders","httpRequestHeaders","getRequestHeadersFromMessage","reportError","xhr","errorMsg","response","getErrorResponse","MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE","MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE","statusText","readyState","onLoad","licenseResponse","LicenseResponse","responseURL","parseHttpHeaders","getAllResponseHeaders","applyFilters","then","licenseMessage","getLicenseMessage","onAbort","onError","reqPayload","getLicenseRequestFromMessage","reqMethod","getHTTPMethod","responseType","getResponseType","timeout","isNaN","httpTimeout","licenseRequest","LicenseRequest","retryAttempts","get","streaming","HTTPRequest","LICENSE","doLicenseRequest","request","retriesCount","XMLHttpRequest","cmcd","enabled","cmcdMode","mode","cmcdParams","getQueryParameter","addAditionalQueryParameterToUrl","open","method","setRequestHeader","cmcdHeaders","getHeaderParameters","header","retryRequest","retryInterval","retryIntervals","setTimeout","onload","ontimeout","onerror","onabort","payload","send","retry","initDataType","abInitData","ArrayBuffer","isView","String","fromCharCode","apply","Uint8Array","getSupportedKeySystems","getKeySystems","setKeySystems","keySystems","setLicenseRequestFilters","filters","setLicenseResponseFilters","Promise","resolve","reduce","prev","next","clearkeyKeySystem","clearkeyW3CKeySystem","KeySystemPlayReady","KeySystemWidevine","KeySystemClearKey","KeySystemW3CClearKey","newKeySystems","getKeySystemBySystemString","initData1","initData2","data1","data2","j","cpIdx","cencContentProtection","findCencContentProtection","schemeIdURI","getInitData","getCDMData","getSessionId","shouldNotFilterOutKeySystem","DRMToday","Widevine","PlayReady","ClearKey","getClearKeysFromProtectionData","protectionDataSet","getProtectionData","getSingletonFactory","LICENSE_SERVER_MANIFEST_CONFIGURATIONS","attributes","prefixes","protectionData","clearkeySet","jsonMsg","parse","keyPairs","clearkeyID","clearkey","KeyPair","ClearKeyKeySet","parseInitDataFromContentProtection","cencDefaultKid","cencDefaultKidToBase64Representation","kid","btoa","match","map","a","parseInt","join","licenseServer","clearkeyProtData","ckData","k","attribute","prefix","__prefix","PRCDMData","messageFormat","msg","xmlDoc","parser","DOMParser","dataview","Uint16Array","parseFromString","headerNameList","getElementsByTagName","headerValueList","childNodes","nodeValue","Content","Challenge","decode","numRecords","getUint16","recordType","recordLength","recordData","record","laurl","luiurl","PSSHBoxType","playreadySystemID","uint8arraydecodedPROHeader","PROSize","PSSHSize","PSSHBoxBuffer","PSSHBox","PSSHData","pro","prheader","setUint32","setPlayReadyMessageFormat","format","customData","cdmDataBytes","MEDIA_KEYERR_CODE","MEDIA_KEYERR_UNKNOWN_CODE","MEDIA_KEYERR_CLIENT_CODE","MEDIA_KEYERR_SERVICE_CODE","MEDIA_KEYERR_OUTPUT_CODE","MEDIA_KEYERR_HARDWARECHANGE_CODE","MEDIA_KEYERR_DOMAIN_CODE","MEDIA_KEY_MESSAGE_ERROR_CODE","SERVER_CERTIFICATE_UPDATED_ERROR_CODE","KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE","MEDIA_KEYERR_UNKNOWN_MESSAGE","MEDIA_KEYERR_CLIENT_MESSAGE","MEDIA_KEYERR_SERVICE_MESSAGE","MEDIA_KEYERR_OUTPUT_MESSAGE","MEDIA_KEYERR_HARDWARECHANGE_MESSAGE","MEDIA_KEYERR_DOMAIN_MESSAGE","MEDIA_KEY_MESSAGE_ERROR_MESSAGE","SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE","KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE","protectionErrors","pendingSessions","sessions","moreSessionsAllowed","eventHandler","createEventHandler","removeEventListeners","ksConfigurations","ve","document","createElement","found","supportedAudio","supportedVideo","configIdx","videos","videoIdx","canPlayType","contentType","ksConfig","KeySystemAccess","mediaElement","addEventListener","newSession","getExpirationTime","NaN","keyID","handleEvent","NeedKey","findSessionByID","code","errorCode","systemCode","shift","KeyMessage","defaultURL","sessionArray","len","removeEventListener","numSessions","session","removeSession","closed","closeKeySessionInternal","getUsable","requestKeySystemAccessInternal","mksa","createMediaKeys","mkeys","createSession","createSessionToken","dataType","generateRequest","toJWK","update","load","success","remove","idx","navigator","requestMediaKeySystemAccess","mediaKeySystemAccess","configuration","getConfiguration","token","splice","parseKeyStatus","args","keyId","keyStatuses","keyStatus","arguments","expiration","getKeyStatuses","usable","audios","audioIdx","window","isTypeSupported","ksAccess","ksConfiguration","boundDoSetKeys","doSetKeys","bind","keySession","errorStr","destinationURL","serverResponse","keypair","keyid","license","keySystemStr","soap","uintToString","arrayBuffer","encodedString","decodedString","decodeURIComponent","escape","parseServerResponse","stringResponse","envelope","getElementsByTagNameNS","body","fault","parseErrorResponse","faultstring","statusCode","idStart","idEnd","detail","exception","node","firstChild","errorString","call","numKeys","jwk","kty","alg","jwkString","buf","bView","sessionTypes","initDataTypes","robustness","tcpid","actualurl","range","trequest","tresponse","responsecode","interval","trace","_stream","_tfinish","_mediaduration","_quality","_responseHeaders","_serviceLocation","HTTPRequestTrace","d","b","t","GET","HEAD","MPD_TYPE","XLINK_EXPANSION_TYPE","INIT_SEGMENT_TYPE","INDEX_SEGMENT_TYPE","MEDIA_SEGMENT_TYPE","BITSTREAM_SWITCHING_SEGMENT_TYPE","MSS_FRAGMENT_INFO_SEGMENT_TYPE","OTHER_TYPE"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,8BAA8B;AAClE;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,oBAAoB;AAC9B;AACA;;AAEA;AACA,UAAU,UAAU;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,sBAAsB;AACrD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7SA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;;;;;;;;;;;;;;;;;ACvLtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;;IAEMA,K;;;;;;;WACF,eAAaC,IAAb,EAAmBC,MAAnB,EAA2BC,IAA3B,EAAiC;AAC7B,UAAIC,CAAJ;AACA,UAAIC,KAAK,GAAG,EAAZ;;AACA,UAAIJ,IAAJ,EAAU;AACN,aAAK,IAAIK,IAAT,IAAiBJ,MAAjB,EAAyB;AACrB,cAAIA,MAAM,CAACK,cAAP,CAAsBD,IAAtB,CAAJ,EAAiC;AAC7BF,aAAC,GAAGF,MAAM,CAACI,IAAD,CAAV;;AACA,gBAAI,EAAEA,IAAI,IAAIL,IAAV,KAAoBA,IAAI,CAACK,IAAD,CAAJ,KAAeF,CAAf,KAAq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yEAAf,E;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;IACMhH,O;AACF;AACJ;AACA;AACA;AACA;AACA;AACI,iBAAYwG,KAAZ,EAAmBtlB,GAAnB,EAAwB;AAAA;;AACpB,OAAKslB,KAAL,GAAaA,KAAb;AACA,OAAKtlB,GAAL,GAAWA,GAAX;AACH,C;;AAGU8e,sEAAf,E;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;IACMkG,e;AACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI,yBAAYjd,SAAZ,EAAuB6gB,eAAvB,EAAwC;AAAA;;AACpC,OAAK7gB,SAAL,GAAiBA,SAAjB;AACA,OAAK6gB,eAAL,GAAuBA,eAAvB;AACH,C;;AAGU5D,8EAAf,E;;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;IACM1R,sB;AACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,gCAAYX,iBAAZ,EAA+BC,iBAA/B,EAAkDI,qBAAlD,EAAyEC,eAAzE,EAA0FsY,YAA1F,EAAwG;AAAA;;AACpG,OAAKC,aAAL,GAAqB,CAAE,MAAF,CAArB;;AACA,MAAI7Y,iBAAiB,IAAIA,iBAAiB,CAACpT,MAA3C,EAAmD;AAC/C,SAAKoT,iBAAL,GAAyBA,iBAAzB;AACH;;AACD,MAAIC,iBAAiB,IAAIA,iBAAiB,CAACrT,MAA3C,EAAmD;AAC/C,SAAKqT,iBAAL,GAAyBA,iBAAzB;AACH;;AACD,OAAKI,qBAAL,GAA6BA,qBAA7B;AACA,OAAKC,eAAL,GAAuBA,eAAvB;AACA,OAAKsY,YAAL,GAAoBA,YAApB;AACH,C;;AAGUjY,qFAAf,E;;;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;IACM2F,c;AACF;AACJ;AACA;AACA;AACA;AACI,wBAAYvZ,GAAZ,EAAiBya,MAAjB,EAAyBxB,YAAzB,EAAuCpY,OAAvC,EAAgDuW,eAAhD,EAAiEnB,WAAjE,EAA8ER,SAA9E,EAAyF3M,IAAzF,EAA+F;AAAA;;AAE3F;AACR;AACA;AACQ,OAAK9I,GAAL,GAAWA,GAAX;AAEA;AACR;AACA;;AACQ,OAAKya,MAAL,GAAcA,MAAd;AAEA;AACR;AACA;;AACQ,OAAKxB,YAAL,GAAoBA,YAApB;AAEA;AACR;AACA;;AACQ,OAAKpY,OAAL,GAAeA,OAAf;AAEA;AACR;AACA;;AACQ,OAAKuW,eAAL,GAAuBA,eAAvB;AAEA;AACR;AACA;;AACQ,OAAKnB,WAAL,GAAmBA,WAAnB;AAEA;AACR;AACA;;AACQ,OAAKR,SAAL,GAAiBA,SAAjB;AAEA;AACR;AACA;;AACQ,OAAK3M,IAAL,GAAYA,IAAZ;AACH,C;;AAGUyQ,6EAAf,E;;;;;;;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;IACMpB,e;AACF;AACJ;AACA;AACA;AACA;AACA;AACI,yBAAYnY,GAAZ,EAAiBa,OAAjB,EAA0BiI,IAA1B,EAAgC;AAAA;;AAE5B;AACR;AACA;AACQ,OAAK9I,GAAL,GAAWA,GAAX;AAEA;AACR;AACA;;AACQ,OAAKa,OAAL,GAAeA,OAAf;AAEA;AACR;AACA;;AACQ,OAAKiI,IAAL,GAAYA,IAAZ;AACH,C;;AAGUqP,8EAAf,E;;;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;IACMzE,e;AACF;AACJ;AACA;AACA;AACA;AACA;AACI,yBAAY0R,WAAZ,EAAyB2G,UAAzB,EAAqC;AAAA;;AACjC,OAAK3G,WAAL,GAAmBA,WAAnB;AACA,OAAK2G,UAAL,GAAkBA,UAAlB;AACH,C;;AAGUrY,8EAAf,E;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;IACMoS,O;AACF;AACJ;AACA;AACA;AACA;AACI,iBAAYxd,QAAZ,EAAsBmT,YAAtB,EAAoC;AAAA;;AAChC,OAAKnT,QAAL,GAAgBA,QAAhB;AACA,OAAKmT,YAAL,GAAoBA,YAApB;AACH,C;;AAGUqK,sEAAf,E;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;IACMzU,W,GACF,qBAAY2U,IAAZ,EAAkB1b,OAAlB,EAA2BxB,IAA3B,EAAiC;AAAA;;AAC7B,OAAKkd,IAAL,GAAYA,IAAI,IAAI,IAApB;AACA,OAAK1b,OAAL,GAAeA,OAAO,IAAI,IAA1B;AACA,OAAKxB,IAAL,GAAYA,IAAI,IAAI,IAApB;AACH,C;;AAGUuI,0EAAf,E;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;IACMsI,W;AACF;AACJ;AACA;AACI,uBAAc;AAAA;;AACV;AACR;AACA;AACA;AACQ,OAAKqS,KAAL,GAAa,IAAb;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ,OAAKvY,IAAL,GAAY,IAAZ;AACA;AACR;AACA;AACA;;AACQ,OAAKzT,GAAL,GAAW,IAAX;AACA;AACR;AACA;AACA;;AACQ,OAAKisB,SAAL,GAAiB,IAAjB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,KAAL,GAAa,IAAb;AACA;AACR;AACA;AACA;;AACQ,OAAKC,QAAL,GAAgB,IAAhB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,SAAL,GAAiB,IAAjB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,YAAL,GAAoB,IAApB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,QAAL,GAAgB,IAAhB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,KAAL,GAAa,EAAb;AAEA;AACR;AACA;AACA;;AACQ,OAAKC,OAAL,GAAe,IAAf;AACA;AACR;AACA;AACA;;AACQ,OAAKC,QAAL,GAAgB,IAAhB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,cAAL,GAAsB,IAAtB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,QAAL,GAAgB,IAAhB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,gBAAL,GAAwB,IAAxB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,gBAAL,GAAwB,IAAxB;AACH,C;AAGL;AACA;AACA;AACA;;;IACMC,gB;AACF;AACJ;AACA;AACI,4BAAc;AAAA;;AACV;AACR;AACA;AACA;AACQ,OAAK3tB,CAAL,GAAS,IAAT;AACA;AACR;AACA;AACA;;AACQ,OAAK4tB,CAAL,GAAS,IAAT;AACA;AACR;AACA;AACA;;AACQ,OAAKC,CAAL,GAAS,EAAT;AACA;AACR;AACA;AACA;;AACS,OAAKC,CAAL,GAAS,IAAT;AACJ,C;;AAGLtT,WAAW,CAACuT,GAAZ,GAAkB,KAAlB;AACAvT,WAAW,CAACwT,IAAZ,GAAmB,MAAnB;AACAxT,WAAW,CAACyT,QAAZ,GAAuB,KAAvB;AACAzT,WAAW,CAAC0T,oBAAZ,GAAmC,gBAAnC;AACA1T,WAAW,CAAC2T,iBAAZ,GAAgC,uBAAhC;AACA3T,WAAW,CAAC4T,kBAAZ,GAAiC,cAAjC;AACA5T,WAAW,CAAC6T,kBAAZ,GAAiC,cAAjC;AACA7T,WAAW,CAAC8T,gCAAZ,GAA+C,2BAA/C;AACA9T,WAAW,CAAC+T,8BAAZ,GAA6C,qBAA7C;AACA/T,WAAW,CAACC,OAAZ,GAAsB,SAAtB;AACAD,WAAW,CAACgU,UAAZ,GAAyB,OAAzB","file":"dash.protection.debug.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dashjs\"] = factory();\n\telse\n\t\troot[\"dashjs\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/streaming/protection/Protection.js\");\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\n\nimport path from 'path-browserify'\n\nclass Utils {\n    static mixin(dest, source, copy) {\n        let s;\n        let empty = {};\n        if (dest) {\n            for (let name in source) {\n                if (source.hasOwnProperty(name)) {\n                    s = source[name];\n                    if (!(name in dest) || (dest[name] !== s && (!(name in empty) || empty[name] !== s))) {\n                        if (typeof dest[name] === 'object' && dest[name] !== null) {\n                            dest[name] = Utils.mixin(dest[name], s, copy);\n                        } else {\n                            dest[name] = copy(s);\n                        }\n                    }\n                }\n            }\n        }\n        return dest;\n    }\n\n    static clone(src) {\n        if (!src || typeof src !== 'object') {\n            return src; // anything\n        }\n        let r;\n        if (src instanceof Array) {\n            // array\n            r = [];\n            for (let i = 0, l = src.length; i < l; ++i) {\n                if (i in src) {\n                    r.push(Utils.clone(src[i]));\n                }\n            }\n        } else {\n            r = {};\n        }\n        return Utils.mixin(r, src, Utils.clone);\n    }\n\n    static addAditionalQueryParameterToUrl(url, params) {\n        try {\n            if (!params || params.length === 0) {\n                return url;\n            }\n\n            let modifiedUrl = new URL(url);\n\n            params.forEach((param) => {\n                if (param.key && param.value) {\n                    modifiedUrl.searchParams.set(param.key, param.value);\n                }\n            });\n\n            return modifiedUrl.href;\n\n\n        } catch (e) {\n            return url;\n        }\n    }\n\n    static parseHttpHeaders(headerStr) {\n        let headers = {};\n        if (!headerStr) {\n            return headers;\n        }\n\n        // Trim headerStr to fix a MS Edge bug with xhr.getAllResponseHeaders method\n        // which send a string starting with a \"\\n\" character\n        let headerPairs = headerStr.trim().split('\\u000d\\u000a');\n        for (let i = 0, ilen = headerPairs.length; i < ilen; i++) {\n            let headerPair = headerPairs[i];\n            let index = headerPair.indexOf('\\u003a\\u0020');\n            if (index > 0) {\n                headers[headerPair.substring(0, index)] = headerPair.substring(index + 2);\n            }\n        }\n        return headers;\n    }\n\n    static generateUuid() {\n        let dt = new Date().getTime();\n        const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = (dt + Math.random() * 16) % 16 | 0;\n            dt = Math.floor(dt / 16);\n            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return uuid;\n    }\n\n    static generateHashCode(string) {\n        let hash = 0;\n\n        if (string.length === 0) {\n            return hash;\n        }\n\n        for (let i = 0; i < string.length; i++) {\n            const chr = string.charCodeAt(i);\n            hash = ((hash << 5) - hash) + chr;\n            hash |= 0;\n        }\n        return hash;\n    }\n\n    /**\n     * Compares both urls and returns a relative url (target relative to original)\n     * @param {string} original\n     * @param {string} target\n     * @return {string|*}\n     */\n    static getRelativeUrl(originalUrl, targetUrl) {\n        try {\n            const original = new URL(originalUrl);\n            const target = new URL(targetUrl);\n\n            // Unify the protocol to compare the origins\n            original.protocol = target.protocol;\n            if (original.origin !== target.origin) {\n                return targetUrl;\n            }\n\n            // Use the relative path implementation of the path library. We need to cut off the actual filename in the end to get the relative path\n            let relativePath = path.relative(original.pathname.substr(0, original.pathname.lastIndexOf('/')), target.pathname.substr(0, target.pathname.lastIndexOf('/')));\n\n            // In case the relative path is empty (both path are equal) return the filename only. Otherwise add a slash in front of the filename\n            const startIndexOffset = relativePath.length === 0 ? 1 : 0;\n            relativePath += target.pathname.substr(target.pathname.lastIndexOf('/') + startIndexOffset, target.pathname.length - 1);\n\n            // Build the other candidate, e.g. the 'host relative' path that starts with \"/\", and return the shortest of the two candidates.\n            if (target.pathname.length < relativePath.length) {\n                return target.pathname;\n            }\n            return relativePath;\n        } catch (e) {\n            return targetUrl\n        }\n    }\n}\n\nexport default Utils;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ErrorsBase {\n    extend (errors, config) {\n        if (!errors) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const err in errors) {\n            if (!errors.hasOwnProperty(err) || (this[err] && !override)) continue;\n            if (publicOnly && errors[err].indexOf('public_') === -1) continue;\n            this[err] = errors[err];\n\n        }\n    }\n}\n\nexport default ErrorsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventsBase {\n    extend (events, config) {\n        if (!events) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const evt in events) {\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\n            this[evt] = events[evt];\n\n        }\n    }\n}\n\nexport default EventsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Constants declaration\n * @class\n * @ignore\n * @hideconstructor\n */\nclass Constants {\n\n    init() {\n        /**\n         *  @constant {string} STREAM Stream media type. Mainly used to report metrics relative to the full stream\n         *  @memberof Constants#\n         *  @static\n         */\n        this.STREAM = 'stream';\n\n        /**\n         *  @constant {string} VIDEO Video media type\n         *  @memberof Constants#\n         *  @static\n         */\n        this.VIDEO = 'video';\n\n        /**\n         *  @constant {string} AUDIO Audio media type\n         *  @memberof Constants#\n         *  @static\n         */\n        this.AUDIO = 'audio';\n\n        /**\n         *  @constant {string} TEXT Text media type\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TEXT = 'text';\n\n        /**\n         *  @constant {string} MUXED Muxed (video/audio in the same chunk) media type\n         *  @memberof Constants#\n         *  @static\n         */\n        this.MUXED = 'muxed';\n\n        /**\n         *  @constant {string} IMAGE Image media type\n         *  @memberof Constants#\n         *  @static\n         */\n        this.IMAGE = 'image';\n\n        /**\n         *  @constant {string} STPP STTP Subtitles format\n         *  @memberof Constants#\n         *  @static\n         */\n        this.STPP = 'stpp';\n\n        /**\n         *  @constant {string} TTML STTP Subtitles format\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TTML = 'ttml';\n\n        /**\n         *  @constant {string} VTT STTP Subtitles format\n         *  @memberof Constants#\n         *  @static\n         */\n        this.VTT = 'vtt';\n\n        /**\n         *  @constant {string} WVTT STTP Subtitles format\n         *  @memberof Constants#\n         *  @static\n         */\n        this.WVTT = 'wvtt';\n\n        /**\n         *  @constant {string} ABR_STRATEGY_DYNAMIC Dynamic Adaptive bitrate algorithm\n         *  @memberof Constants#\n         *  @static\n         */\n        this.ABR_STRATEGY_DYNAMIC = 'abrDynamic';\n\n        /**\n         *  @constant {string} ABR_STRATEGY_BOLA Adaptive bitrate algorithm based on Bola (buffer level)\n         *  @memberof Constants#\n         *  @static\n         */\n        this.ABR_STRATEGY_BOLA = 'abrBola';\n\n        /**\n         *  @constant {string} ABR_STRATEGY_L2A Adaptive bitrate algorithm based on L2A (online learning)\n         *  @memberof Constants#\n         *  @static\n         */\n        this.ABR_STRATEGY_L2A = 'abrL2A';\n\n        /**\n         *  @constant {string} ABR_STRATEGY_LoLP Adaptive bitrate algorithm based on LoL+\n         *  @memberof Constants#\n         *  @static\n         */\n        this.ABR_STRATEGY_LoLP = 'abrLoLP';\n\n        /**\n         *  @constant {string} ABR_STRATEGY_THROUGHPUT Adaptive bitrate algorithm based on throughput\n         *  @memberof Constants#\n         *  @static\n         */\n        this.ABR_STRATEGY_THROUGHPUT = 'abrThroughput';\n\n        /**\n         *  @constant {string} ABR_FETCH_THROUGHPUT_CALUCUALTION_DOWNLOADED_DATA Throughput calculation based on downloaded data array\n         *  @memberof Constants#\n         *  @static\n         */\n        this.ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA = 'abrFetchThroughputCalculationDownloadedData';\n\n        /**\n         *  @constant {string} ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING Throughput calculation based on moof parsing\n         *  @memberof Constants#\n         *  @static\n         */\n        this.ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING = 'abrFetchThroughputCalculationMoofParsing';\n\n        /**\n        *  @constant {string} ABR_FETCH_THROUGHPUT_CALCULATION_AAST Throughput calculation based on adjusted availability start time in low latency mode\n        *  @memberof Constants#\n        *  @static\n        */\n        this.ABR_FETCH_THROUGHPUT_CALCULATION_AAST = 'abrFetchThroughputCalculationAAST';\n\n        /**\n         *  @constant {string} LIVE_CATCHUP_MODE_DEFAULT Throughput calculation based on moof parsing\n         *  @memberof Constants#\n         *  @static\n         */\n        this.LIVE_CATCHUP_MODE_DEFAULT = 'liveCatchupModeDefault';\n\n        /**\n         *  @constant {string} LIVE_CATCHUP_MODE_LOLP Throughput calculation based on moof parsing\n         *  @memberof Constants#\n         *  @static\n         */\n        this.LIVE_CATCHUP_MODE_LOLP = 'liveCatchupModeLoLP';\n\n        /**\n         *  @constant {string} MOVING_AVERAGE_SLIDING_WINDOW Moving average sliding window\n         *  @memberof Constants#\n         *  @static\n         */\n        this.MOVING_AVERAGE_SLIDING_WINDOW = 'slidingWindow';\n\n        /**\n         *  @constant {string} EWMA Exponential moving average\n         *  @memberof Constants#\n         *  @static\n         */\n        this.MOVING_AVERAGE_EWMA = 'ewma';\n\n        /**\n         *  @constant {string} BAD_ARGUMENT_ERROR Invalid Arguments type of error\n         *  @memberof Constants#\n         *  @static\n         */\n        this.BAD_ARGUMENT_ERROR = 'Invalid Arguments';\n\n        /**\n         *  @constant {string} MISSING_CONFIG_ERROR Missing configuration parameters type of error\n         *  @memberof Constants#\n         *  @static\n         */\n        this.MISSING_CONFIG_ERROR = 'Missing config parameter(s)';\n\n        /**\n         *  @constant {string} TRACK_SWITCH_MODE_ALWAYS_REPLACE used to clear the buffered data (prior to current playback position) after track switch. Default for audio\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TRACK_SWITCH_MODE_ALWAYS_REPLACE = 'alwaysReplace';\n\n        /**\n         *  @constant {string} TRACK_SWITCH_MODE_NEVER_REPLACE used to forbid clearing the buffered data (prior to current playback position) after track switch. Defers to fastSwitchEnabled for placement of new data. Default for video\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TRACK_SWITCH_MODE_NEVER_REPLACE = 'neverReplace';\n\n        /**\n         *  @constant {string} TRACK_SELECTION_MODE_FIRST_TRACK makes the player select the first track found in the manifest.\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TRACK_SELECTION_MODE_FIRST_TRACK = 'firstTrack';\n\n        /**\n         *  @constant {string} TRACK_SELECTION_MODE_HIGHEST_BITRATE makes the player select the track with a highest bitrate. This mode is a default mode.\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TRACK_SELECTION_MODE_HIGHEST_BITRATE = 'highestBitrate';\n\n        /**\n         *  @constant {string} TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY makes the player select the track with the lowest bitrate per pixel average.\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY = 'highestEfficiency';\n\n        /**\n         *  @constant {string} TRACK_SELECTION_MODE_WIDEST_RANGE makes the player select the track with a widest range of bitrates.\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TRACK_SELECTION_MODE_WIDEST_RANGE = 'widestRange';\n\n        /**\n         *  @constant {string} TRACK_SELECTION_MODE_WIDEST_RANGE makes the player select the track with the highest selectionPriority as defined in the manifest\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY = 'highestSelectionPriority';\n\n        /**\n         *  @constant {string} CMCD_MODE_QUERY specifies to attach CMCD metrics as query parameters.\n         *  @memberof Constants#\n         *  @static\n         */\n        this.CMCD_MODE_QUERY = 'query';\n\n        /**\n         *  @constant {string} CMCD_MODE_HEADER specifies to attach CMCD metrics as HTTP headers.\n         *  @memberof Constants#\n         *  @static\n         */\n        this.CMCD_MODE_HEADER = 'header';\n\n\n        this.LOCATION = 'Location';\n        this.INITIALIZE = 'initialize';\n        this.TEXT_SHOWING = 'showing';\n        this.TEXT_HIDDEN = 'hidden';\n        this.CC1 = 'CC1';\n        this.CC3 = 'CC3';\n        this.UTF8 = 'utf-8';\n        this.SCHEME_ID_URI = 'schemeIdUri';\n        this.START_TIME = 'starttime';\n        this.SERVICE_DESCRIPTION_LL_SCHEME = 'urn:dvb:dash:lowlatency:scope:2019';\n        this.SUPPLEMENTAL_PROPERTY_LL_SCHEME = 'urn:dvb:dash:lowlatency:critical:2019';\n        this.XML = 'XML';\n        this.ARRAY_BUFFER = 'ArrayBuffer';\n        this.DVB_REPORTING_URL = 'dvb:reportingUrl';\n        this.DVB_PROBABILITY = 'dvb:probability';\n        this.VIDEO_ELEMENT_READY_STATES = {\n            HAVE_NOTHING: 0,\n            HAVE_METADATA: 1,\n            HAVE_CURRENT_DATA: 2,\n            HAVE_FUTURE_DATA: 3,\n            HAVE_ENOUGH_DATA: 4\n        };\n    }\n\n    constructor() {\n        this.init();\n    }\n}\n\nconst constants = new Constants();\nexport default constants;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Protection Constants declaration\n * @class\n * @ignore\n */\nclass ProtectionConstants {\n\n    init () {\n        this.CLEARKEY_KEYSTEM_STRING = 'org.w3.clearkey';\n        this.WIDEVINE_KEYSTEM_STRING = 'com.widevine.alpha';\n        this.PLAYREADY_KEYSTEM_STRING = 'com.microsoft.playready';\n    }\n\n    constructor () {\n        this.init();\n    }\n}\n\nlet constants = new ProtectionConstants();\nexport default constants;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\nclass CommonEncryption {\n    /**\n     * Find and return the ContentProtection element in the given array\n     * that indicates support for MPEG Common Encryption\n     *\n     * @param {Array} cpArray array of content protection elements\n     * @returns {Object|null} the Common Encryption content protection element or\n     * null if one was not found\n     */\n    static findCencContentProtection(cpArray) {\n        let retVal = null;\n        for (let i = 0; i < cpArray.length; ++i) {\n            let cp = cpArray[i];\n            if (cp.schemeIdUri.toLowerCase() === 'urn:mpeg:dash:mp4protection:2011' &&\n                (cp.value.toLowerCase() === 'cenc' || cp.value.toLowerCase() === 'cbcs'))\n                retVal = cp;\n        }\n        return retVal;\n    }\n\n    /**\n     * Returns just the data portion of a single PSSH\n     *\n     * @param {ArrayBuffer} pssh - the PSSH\n     * @return {ArrayBuffer} data portion of the PSSH\n     */\n    static getPSSHData(pssh) {\n        let offset = 8; // Box size and type fields\n        let view = new DataView(pssh);\n\n        // Read version\n        let version = view.getUint8(offset);\n\n        offset += 20; // Version (1), flags (3), system ID (16)\n\n        if (version > 0) {\n            offset += 4 + (16 * view.getUint32(offset)); // Key ID count (4) and All key IDs (16*count)\n        }\n\n        offset += 4; // Data size\n        return pssh.slice(offset);\n    }\n\n    /**\n     * Returns the PSSH associated with the given key system from the concatenated\n     * list of PSSH boxes in the given initData\n     *\n     * @param {KeySystem} keySystem the desired\n     * key system\n     * @param {ArrayBuffer} initData 'cenc' initialization data.  Concatenated list of PSSH.\n     * @returns {ArrayBuffer|null} The PSSH box data corresponding to the given key system, null if not found\n     * or null if a valid association could not be found.\n     */\n    static getPSSHForKeySystem(keySystem, initData) {\n        let psshList = CommonEncryption.parsePSSHList(initData);\n        if (keySystem && psshList.hasOwnProperty(keySystem.uuid.toLowerCase())) {\n            return psshList[keySystem.uuid.toLowerCase()];\n        }\n        return null;\n    }\n\n    /**\n     * Parse a standard common encryption PSSH which contains a simple\n     * base64-encoding of the init data\n     *\n     * @param {Object} cpData the ContentProtection element\n     * @param {BASE64} BASE64 reference\n     * @returns {ArrayBuffer|null} the init data or null if not found\n     */\n    static parseInitDataFromContentProtection(cpData, BASE64) {\n        if ('pssh' in cpData) {\n\n            // Remove whitespaces and newlines from pssh text\n            cpData.pssh.__text = cpData.pssh.__text.replace(/\\r?\\n|\\r/g, '').replace(/\\s+/g, '');\n\n            return BASE64.decodeArray(cpData.pssh.__text).buffer;\n        }\n        return null;\n    }\n\n    /**\n     * Parses list of PSSH boxes into keysystem-specific PSSH data\n     *\n     * @param {ArrayBuffer} data - the concatenated list of PSSH boxes as provided by\n     * CDM as initialization data when CommonEncryption content is detected\n     * @returns {Object|Array} an object that has a property named according to each of\n     * the detected key system UUIDs (e.g. 00000000-0000-0000-0000-0000000000)\n     * and a ArrayBuffer (the entire PSSH box) as the property value\n     */\n    static parsePSSHList(data) {\n\n        if (data === null || data === undefined)\n            return [];\n\n        let dv = new DataView(data.buffer || data); // data.buffer first for Uint8Array support\n        let done = false;\n        let pssh = {};\n\n        // TODO: Need to check every data read for end of buffer\n        let byteCursor = 0;\n        while (!done) {\n\n            let size,\n                nextBox,\n                version,\n                systemID;\n            let boxStart = byteCursor;\n\n            if (byteCursor >= dv.buffer.byteLength)\n                break;\n\n            /* Box size */\n            size = dv.getUint32(byteCursor);\n            nextBox = byteCursor + size;\n            byteCursor += 4;\n\n            /* Verify PSSH */\n            if (dv.getUint32(byteCursor) !== 0x70737368) {\n                byteCursor = nextBox;\n                continue;\n            }\n            byteCursor += 4;\n\n            /* Version must be 0 or 1 */\n            version = dv.getUint8(byteCursor);\n            if (version !== 0 && version !== 1) {\n                byteCursor = nextBox;\n                continue;\n            }\n            byteCursor++;\n\n            byteCursor += 3; /* skip flags */\n\n            // 16-byte UUID/SystemID\n            systemID = '';\n            let i, val;\n            for (i = 0; i < 4; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 4;\n            systemID += '-';\n            for (i = 0; i < 2; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 2;\n            systemID += '-';\n            for (i = 0; i < 2; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 2;\n            systemID += '-';\n            for (i = 0; i < 2; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 2;\n            systemID += '-';\n            for (i = 0; i < 6; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 6;\n\n            systemID = systemID.toLowerCase();\n\n            /* PSSH Data Size */\n            byteCursor += 4;\n\n            /* PSSH Data */\n            pssh[systemID] = dv.buffer.slice(boxStart, nextBox);\n            byteCursor = nextBox;\n        }\n\n        return pssh;\n    }\n}\n\nexport default CommonEncryption;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ProtectionController from './controllers/ProtectionController';\nimport ProtectionKeyController from './controllers/ProtectionKeyController';\nimport ProtectionEvents from './ProtectionEvents';\nimport ProtectionErrors from './errors/ProtectionErrors';\nimport ProtectionModel_21Jan2015 from './models/ProtectionModel_21Jan2015';\nimport ProtectionModel_3Feb2014 from './models/ProtectionModel_3Feb2014';\nimport ProtectionModel_01b from './models/ProtectionModel_01b';\n\nconst APIS_ProtectionModel_01b = [\n    // Un-prefixed as per spec\n    {\n        // Video Element\n        generateKeyRequest: 'generateKeyRequest',\n        addKey: 'addKey',\n        cancelKeyRequest: 'cancelKeyRequest',\n\n        // Events\n        needkey: 'needkey',\n        keyerror: 'keyerror',\n        keyadded: 'keyadded',\n        keymessage: 'keymessage'\n    },\n    // Webkit-prefixed (early Chrome versions and Chrome with EME disabled in chrome://flags)\n    {\n        // Video Element\n        generateKeyRequest: 'webkitGenerateKeyRequest',\n        addKey: 'webkitAddKey',\n        cancelKeyRequest: 'webkitCancelKeyRequest',\n\n        // Events\n        needkey: 'webkitneedkey',\n        keyerror: 'webkitkeyerror',\n        keyadded: 'webkitkeyadded',\n        keymessage: 'webkitkeymessage'\n    }\n];\n\nconst APIS_ProtectionModel_3Feb2014 = [\n    // Un-prefixed as per spec\n    // Chrome 38-39 (and some earlier versions) with chrome://flags -- Enable Encrypted Media Extensions\n    {\n        // Video Element\n        setMediaKeys: 'setMediaKeys',\n        // MediaKeys\n        MediaKeys: 'MediaKeys',\n        // MediaKeySession\n        release: 'close',\n\n        // Events\n        needkey: 'needkey',\n        error: 'keyerror',\n        message: 'keymessage',\n        ready: 'keyadded',\n        close: 'keyclose'\n    },\n    // MS-prefixed (IE11, Windows 8.1)\n    {\n        // Video Element\n        setMediaKeys: 'msSetMediaKeys',\n        // MediaKeys\n        MediaKeys: 'MSMediaKeys',\n        // MediaKeySession\n        release: 'close',\n        // Events\n        needkey: 'msneedkey',\n        error: 'mskeyerror',\n        message: 'mskeymessage',\n        ready: 'mskeyadded',\n        close: 'mskeyclose'\n    }\n];\n\nfunction Protection() {\n    let instance;\n    const context = this.context;\n\n    /**\n     * Create a ProtectionController and associated ProtectionModel for use with\n     * a single piece of content.\n     *\n     * @param {Object} config\n     * @return {ProtectionController} protection controller\n     *\n     */\n    function createProtectionSystem(config) {\n        let controller = null;\n\n        const protectionKeyController = ProtectionKeyController(context).getInstance();\n        protectionKeyController.setConfig({ debug: config.debug, BASE64: config.BASE64 });\n        protectionKeyController.initialize();\n\n        let protectionModel =  getProtectionModel(config);\n\n        if (!controller && protectionModel) {//TODO add ability to set external controller if still needed at all?\n            controller = ProtectionController(context).create({\n                protectionModel: protectionModel,\n                protectionKeyController: protectionKeyController,\n                eventBus: config.eventBus,\n                debug: config.debug,\n                events: config.events,\n                BASE64: config.BASE64,\n                constants: config.constants,\n                cmcdModel: config.cmcdModel,\n                settings: config.settings\n            });\n            config.capabilities.setEncryptedMediaSupported(true);\n        }\n        return controller;\n    }\n\n    function getProtectionModel(config) {\n        const debug = config.debug;\n        const logger = debug.getLogger(instance);\n        const eventBus = config.eventBus;\n        const errHandler = config.errHandler;\n        const videoElement = config.videoModel ? config.videoModel.getElement() : null;\n\n        if ((!videoElement || videoElement.onencrypted !== undefined) &&\n            (!videoElement || videoElement.mediaKeys !== undefined)) {\n            logger.info('EME detected on this user agent! (ProtectionModel_21Jan2015)');\n            return ProtectionModel_21Jan2015(context).create({ debug: debug, eventBus: eventBus, events: config.events });\n        } else if (getAPI(videoElement, APIS_ProtectionModel_3Feb2014)) {\n            logger.info('EME detected on this user agent! (ProtectionModel_3Feb2014)');\n            return ProtectionModel_3Feb2014(context).create({ debug: debug, eventBus: eventBus, events: config.events, api: getAPI(videoElement, APIS_ProtectionModel_3Feb2014) });\n        } else if (getAPI(videoElement, APIS_ProtectionModel_01b)) {\n            logger.info('EME detected on this user agent! (ProtectionModel_01b)');\n            return ProtectionModel_01b(context).create({ debug: debug, eventBus: eventBus, errHandler: errHandler, events: config.events, api: getAPI(videoElement, APIS_ProtectionModel_01b) });\n        } else {\n            logger.warn('No supported version of EME detected on this user agent! - Attempts to play encrypted content will fail!');\n            return null;\n        }\n    }\n\n    function getAPI(videoElement, apis) {\n        for (let i = 0; i < apis.length; i++) {\n            const api = apis[i];\n            // detect if api is supported by browser\n            // check only first function in api -> should be fine\n            if (typeof videoElement[api[Object.keys(api)[0]]] !== 'function') {\n                continue;\n            }\n\n            return api;\n        }\n\n        return null;\n    }\n\n    instance = {\n        createProtectionSystem: createProtectionSystem\n    };\n\n    return instance;\n}\n\nProtection.__dashjs_factory_name = 'Protection';\nconst factory = dashjs.FactoryMaker.getClassFactory(Protection); /* jshint ignore:line */\nfactory.events = ProtectionEvents;\nfactory.errors = ProtectionErrors;\ndashjs.FactoryMaker.updateClassFactory(Protection.__dashjs_factory_name, factory); /* jshint ignore:line */\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../../core/events/EventsBase';\n/**\n * @class\n  */\nclass ProtectionEvents extends EventsBase {\n    /**\n     * @description Public facing external events to be used when including protection package.\n     * All public events will be aggregated into the MediaPlayerEvents Class and can be accessed\n     * via MediaPlayer.events.  public_ is the prefix that we use to move event names to MediaPlayerEvents.\n     */\n    constructor () {\n        super();\n\n        /**\n         * Event ID for events delivered when the protection set receives\n         * a key message from the CDM\n         *\n         * @ignore\n         */\n        this.INTERNAL_KEY_MESSAGE = 'internalKeyMessage';\n\n        /**\n         * Event ID for events delivered when a key system selection procedure\n         * completes\n         * @ignore\n         */\n        this.INTERNAL_KEY_SYSTEM_SELECTED = 'internalKeySystemSelected';\n\n        /**\n         * Event ID for events delivered when the status of one decryption keys has changed\n         * @ignore\n         */\n        this.INTERNAL_KEY_STATUS_CHANGED = 'internalkeyStatusChanged';\n\n        /**\n         * Event ID for events delivered when a new key has been added\n         *\n         * @constant\n         * @deprecated The latest versions of the EME specification no longer\n         * use this event.  {@MediaPlayer.models.protectionModel.eventList.KEY_STATUSES_CHANGED}\n         * is preferred.\n         * @event ProtectionEvents#KEY_ADDED\n         */\n        this.KEY_ADDED = 'public_keyAdded';\n        /**\n         * Event ID for events delivered when an error is encountered by the CDM\n         * while processing a license server response message\n         * @event ProtectionEvents#KEY_ERROR\n         */\n        this.KEY_ERROR = 'public_keyError';\n\n        /**\n         * Event ID for events delivered when the protection set receives\n         * a key message from the CDM\n         * @event ProtectionEvents#KEY_MESSAGE\n         */\n        this.KEY_MESSAGE = 'public_keyMessage';\n\n        /**\n         * Event ID for events delivered when a key session close\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_CLOSED\n         */\n        this.KEY_SESSION_CLOSED = 'public_keySessionClosed';\n\n        /**\n         * Event ID for events delivered when a new key sessions creation\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_CREATED\n         */\n        this.KEY_SESSION_CREATED = 'public_keySessionCreated';\n\n        /**\n         * Event ID for events delivered when a key session removal\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_REMOVED\n         */\n        this.KEY_SESSION_REMOVED = 'public_keySessionRemoved';\n\n        /**\n         * Event ID for events delivered when the status of one or more\n         * decryption keys has changed\n         * @event ProtectionEvents#KEY_STATUSES_CHANGED\n         */\n        this.KEY_STATUSES_CHANGED = 'public_keyStatusesChanged';\n\n        /**\n         * Event ID for events delivered when a key system access procedure\n         * has completed\n         * @ignore\n         */\n        this.KEY_SYSTEM_ACCESS_COMPLETE = 'public_keySystemAccessComplete';\n\n        /**\n         * Event ID for events delivered when a key system selection procedure\n         * completes\n         * @event ProtectionEvents#KEY_SYSTEM_SELECTED\n         */\n        this.KEY_SYSTEM_SELECTED = 'public_keySystemSelected';\n\n        /**\n         * Event ID for events delivered when a license request procedure\n         * has completed\n         * @event ProtectionEvents#LICENSE_REQUEST_COMPLETE\n         */\n        this.LICENSE_REQUEST_COMPLETE = 'public_licenseRequestComplete';\n\n        /**\n         * Sending a license rquest\n         * @event ProtectionEvents#LICENSE_REQUEST_SENDING\n         */\n        this.LICENSE_REQUEST_SENDING = 'public_licenseRequestSending';\n\n        /**\n         * Event ID for needkey/encrypted events\n         * @ignore\n         */\n        this.NEED_KEY = 'needkey';\n\n        /**\n         * Event ID for events delivered when the Protection system is detected and created.\n         * @event ProtectionEvents#PROTECTION_CREATED\n         */\n        this.PROTECTION_CREATED = 'public_protectioncreated';\n\n        /**\n         * Event ID for events delivered when the Protection system is destroyed.\n         * @event ProtectionEvents#PROTECTION_DESTROYED\n         */\n        this.PROTECTION_DESTROYED = 'public_protectiondestroyed';\n\n        /**\n         * Event ID for events delivered when a new server certificate has\n         * been delivered to the CDM\n         * @ignore\n         */\n        this.SERVER_CERTIFICATE_UPDATED = 'serverCertificateUpdated';\n\n        /**\n         * Event ID for events delivered when the process of shutting down\n         * a protection set has completed\n         * @ignore\n         */\n        this.TEARDOWN_COMPLETE =  'protectionTeardownComplete';\n\n        /**\n         * Event ID for events delivered when a HTMLMediaElement has been\n         * associated with the protection set\n         * @ignore\n         */\n        this.VIDEO_ELEMENT_SELECTED = 'videoElementSelected';\n\n        /**\n         * Triggered when the key session has been updated successfully\n         * @ignore\n         */\n        this.KEY_SESSION_UPDATED = 'public_keySessionUpdated';\n    }\n}\n\nlet protectionEvents = new ProtectionEvents();\nexport default protectionEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport CommonEncryption from '../CommonEncryption';\nimport MediaCapability from '../vo/MediaCapability';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\nimport ProtectionErrors from '../errors/ProtectionErrors';\nimport DashJSError from '../../vo/DashJSError';\nimport LicenseRequest from '../vo/LicenseRequest';\nimport LicenseResponse from '../vo/LicenseResponse';\nimport {HTTPRequest} from '../../vo/metrics/HTTPRequest';\nimport Utils from '../../../core/Utils';\nimport Constants from '../../constants/Constants';\n\nconst NEEDKEY_BEFORE_INITIALIZE_RETRIES = 5;\nconst NEEDKEY_BEFORE_INITIALIZE_TIMEOUT = 500;\n\nconst LICENSE_SERVER_REQUEST_RETRIES = 3;\nconst LICENSE_SERVER_REQUEST_RETRY_INTERVAL = 1000;\nconst LICENSE_SERVER_REQUEST_DEFAULT_TIMEOUT = 8000;\n\n/**\n * @module ProtectionController\n * @description Provides access to media protection information and functionality.  Each\n * ProtectionController manages a single {@link MediaPlayer.models.ProtectionModel}\n * which encapsulates a set of protection information (EME APIs, selected key system,\n * key sessions).  The APIs of ProtectionController mostly align with the latest EME\n * APIs.  Key system selection is mostly automated when combined with app-overrideable\n * functionality provided in {@link ProtectionKeyController}.\n * @todo ProtectionController does almost all of its tasks automatically after init() is\n * called.  Applications might want more control over this process and want to go through\n * each step manually (key system selection, session creation, session maintenance).\n * This module can be accessed using the MediaPlayer API getProtectionController()\n * @param {Object} config\n */\n\nfunction ProtectionController(config) {\n\n    config = config || {};\n    const protectionKeyController = config.protectionKeyController;\n    let protectionModel = config.protectionModel;\n    const eventBus = config.eventBus;\n    const events = config.events;\n    const debug = config.debug;\n    const BASE64 = config.BASE64;\n    const constants = config.constants;\n    let needkeyRetries = [];\n    const cmcdModel = config.cmcdModel;\n    const settings = config.settings;\n\n    let instance,\n        logger,\n        pendingNeedKeyData,\n        mediaInfoArr,\n        protDataSet,\n        sessionType,\n        robustnessLevel,\n        keySystem,\n        licenseRequestFilters,\n        licenseResponseFilters;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        pendingNeedKeyData = [];\n        mediaInfoArr = [];\n        sessionType = 'temporary';\n        robustnessLevel = '';\n        licenseRequestFilters = [];\n        licenseResponseFilters = [];\n    }\n\n    function checkConfig() {\n        if (!eventBus || !eventBus.hasOwnProperty('on') || !protectionKeyController || !protectionKeyController.hasOwnProperty('getSupportedKeySystemsFromContentProtection')) {\n            throw new Error('Missing config parameter(s)');\n        }\n    }\n\n    /**\n     * Initialize this protection system with a given audio\n     * or video stream information.\n     *\n     * @param {StreamInfo} [mediaInfo] Media information\n     * @memberof module:ProtectionController\n     * @instance\n     * @todo This API will change when we have better support for allowing applications\n     * to select different adaptation sets for playback.  Right now it is clunky for\n     * applications to create {@link StreamInfo} with the right information,\n     * @ignore\n     */\n    function initializeForMedia(mediaInfo) {\n        // Not checking here if a session for similar KS/KID combination is already created\n        // because still don't know which keysystem will be selected.\n        // Once Keysystem is selected and before creating the session, we will do that check\n        // so we create the strictly necessary DRM sessions\n        if (!mediaInfo) {\n            throw new Error('mediaInfo can not be null or undefined');\n        }\n\n        checkConfig();\n\n        eventBus.on(events.INTERNAL_KEY_MESSAGE, onKeyMessage, this);\n        eventBus.on(events.INTERNAL_KEY_STATUS_CHANGED, onKeyStatusChanged, this);\n        mediaInfoArr.push(mediaInfo);\n\n        // ContentProtection elements are specified at the AdaptationSet level, so the CP for audio\n        // and video will be the same.  Just use one valid MediaInfo object\n        const supportedKS = protectionKeyController.getSupportedKeySystemsFromContentProtection(mediaInfo.contentProtection);\n        if (supportedKS && supportedKS.length > 0) {\n            selectKeySystem(supportedKS, true);\n        }\n    }\n\n    /**\n     * Removes all entries from the mediaInfoArr array for a specific stream id\n     * @param {String} streamId\n     */\n    function clearMediaInfoArrayByStreamId(streamId) {\n        mediaInfoArr = mediaInfoArr.filter((mediaInfo) => {\n            return mediaInfo.streamInfo.id !== streamId;\n        });\n    }\n\n    /**\n     * Returns a set of supported key systems and CENC initialization data\n     * from the given array of ContentProtection elements.  Only\n     * key systems that are supported by this player will be returned.\n     * Key systems are returned in priority order (highest first).\n     *\n     * @param {Array.<Object>} cps - array of content protection elements parsed\n     * from the manifest\n     * @returns {Array.<Object>} array of objects indicating which supported key\n     * systems were found.  Empty array is returned if no\n     * supported key systems were found\n     * @memberof module:ProtectionKeyController\n     * @instance\n     * @ignore\n     */\n    function getSupportedKeySystemsFromContentProtection(cps) {\n        checkConfig();\n        return protectionKeyController.getSupportedKeySystemsFromContentProtection(cps);\n    }\n\n    /**\n     * Create a new key session associated with the given initialization data from\n     * the MPD or from the PSSH box in the media\n     *\n     * @param {ArrayBuffer} initData the initialization data\n     * @param {Uint8Array} cdmData the custom data to provide to licenser\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionCreated\n     * @todo In older versions of the EME spec, there was a one-to-one relationship between\n     * initialization data and key sessions.  That is no longer true in the latest APIs.  This\n     * API will need to modified (and a new \"generateRequest(keySession, initData)\" API created)\n     * to come up to speed with the latest EME standard\n     * @ignore\n     */\n    function createKeySession(initData, cdmData) {\n        const initDataForKS = CommonEncryption.getPSSHForKeySystem(keySystem, initData);\n        const protData = getProtData(keySystem);\n        if (initDataForKS) {\n\n            // Check for duplicate initData\n            if (_isInitDataDuplicate(initDataForKS)) {\n                return;\n            }\n\n            try {\n                protectionModel.createKeySession(initDataForKS, protData, getSessionType(keySystem), cdmData);\n            } catch (error) {\n                eventBus.trigger(events.KEY_SESSION_CREATED, {\n                    data: null,\n                    error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + error.message)\n                });\n            }\n        } else if (initData) {\n            protectionModel.createKeySession(initData, protData, getSessionType(keySystem), cdmData);\n        } else {\n            eventBus.trigger(events.KEY_SESSION_CREATED, {\n                data: null,\n                error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Selected key system is ' + (keySystem ? keySystem.systemString : null) + '.  needkey/encrypted event contains no initData corresponding to that key system!')\n            });\n        }\n    }\n\n    /**\n     * Checks if the provided init data is equal to one of the existing init data values\n     * @param {any} initDataForKS\n     * @return {boolean}\n     * @private\n     */\n    function _isInitDataDuplicate(initDataForKS) {\n\n        if (!initDataForKS) {\n            return false;\n        }\n\n        try {\n            const currentInitData = protectionModel.getAllInitData();\n            for (let i = 0; i < currentInitData.length; i++) {\n                if (protectionKeyController.initDataEquals(initDataForKS, currentInitData[i])) {\n                    logger.debug('DRM: Ignoring initData because we have already seen it!');\n                    return true;\n                }\n            }\n\n            return false;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Loads a key session with the given session ID from persistent storage.  This\n     * essentially creates a new key session\n     *\n     * @param {string} sessionID\n     * @param {string} initData\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionCreated\n     * @ignore\n     */\n    function loadKeySession(sessionID, initData) {\n        checkConfig();\n        protectionModel.loadKeySession(sessionID, initData, getSessionType(keySystem));\n    }\n\n    /**\n     * Removes the given key session from persistent storage and closes the session\n     * as if {@link ProtectionController#closeKeySession}\n     * was called\n     *\n     * @param {SessionToken} sessionToken the session\n     * token\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionRemoved\n     * @fires ProtectionController#KeySessionClosed\n     * @ignore\n     */\n    function removeKeySession(sessionToken) {\n        checkConfig();\n        protectionModel.removeKeySession(sessionToken);\n    }\n\n    /**\n     * Closes the key session and releases all associated decryption keys.  These\n     * keys will no longer be available for decrypting media\n     *\n     * @param {SessionToken} sessionToken the session\n     * token\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionClosed\n     * @ignore\n     */\n    function closeKeySession(sessionToken) {\n        checkConfig();\n        protectionModel.closeKeySession(sessionToken);\n    }\n\n    /**\n     * Sets a server certificate for use by the CDM when signing key messages\n     * intended for a particular license server.  This will fire\n     * an error event if a key system has not yet been selected.\n     *\n     * @param {ArrayBuffer} serverCertificate a CDM-specific license server\n     * certificate\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#ServerCertificateUpdated\n     */\n    function setServerCertificate(serverCertificate) {\n        checkConfig();\n        protectionModel.setServerCertificate(serverCertificate);\n    }\n\n    /**\n     * Associate this protection system with the given HTMLMediaElement.  This\n     * causes the system to register for needkey/encrypted events from the given\n     * element and provides a destination for setting of MediaKeys\n     *\n     * @param {HTMLMediaElement} element the media element to which the protection\n     * system should be associated\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setMediaElement(element) {\n        checkConfig();\n        if (element) {\n            protectionModel.setMediaElement(element);\n            eventBus.on(events.NEED_KEY, onNeedKey, this);\n        } else if (element === null) {\n            protectionModel.setMediaElement(element);\n            eventBus.off(events.NEED_KEY, onNeedKey, this);\n        }\n    }\n\n    /**\n     * Sets the session type to use when creating key sessions.  Either \"temporary\" or\n     * \"persistent-license\".  Default is \"temporary\".\n     *\n     * @param {string} value the session type\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setSessionType(value) {\n        sessionType = value;\n    }\n\n    /**\n     * Sets the robustness level for video and audio capabilities. Optional to remove Chrome warnings.\n     * Possible values are SW_SECURE_CRYPTO, SW_SECURE_DECODE, HW_SECURE_CRYPTO, HW_SECURE_CRYPTO, HW_SECURE_DECODE, HW_SECURE_ALL.\n     *\n     * @param {string} level the robustness level\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setRobustnessLevel(level) {\n        robustnessLevel = level;\n    }\n\n    /**\n     * Attach KeySystem-specific data to use for license acquisition with EME\n     *\n     * @param {Object} data an object containing property names corresponding to\n     * key system name strings (e.g. \"org.w3.clearkey\") and associated values\n     * being instances of {@link ProtectionData}\n     * @memberof module:ProtectionController\n     * @instance\n     * @ignore\n     */\n    function setProtectionData(data) {\n        protDataSet = data;\n        protectionKeyController.setProtectionData(data);\n    }\n\n    /**\n     * Stop method is called when current playback is stopped/resetted.\n     *\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function stop() {\n        if (protectionModel) {\n            protectionModel.stop();\n        }\n    }\n\n\n    /**\n     * Destroys all protection data associated with this protection set.  This includes\n     * deleting all key sessions. In the case of persistent key sessions, the sessions\n     * will simply be unloaded and not deleted.  Additionally, if this protection set is\n     * associated with a HTMLMediaElement, it will be detached from that element.\n     *\n     * @memberof module:ProtectionController\n     * @instance\n     * @ignore\n     */\n    function reset() {\n        checkConfig();\n\n        licenseRequestFilters = [];\n        licenseResponseFilters = [];\n\n        eventBus.off(events.INTERNAL_KEY_MESSAGE, onKeyMessage, this);\n        eventBus.off(events.INTERNAL_KEY_STATUS_CHANGED, onKeyStatusChanged, this);\n\n        setMediaElement(null);\n\n        keySystem = undefined;\n\n        if (protectionModel) {\n            protectionModel.reset();\n            protectionModel = null;\n        }\n\n        needkeyRetries.forEach(retryTimeout => clearTimeout(retryTimeout));\n        needkeyRetries = [];\n\n        mediaInfoArr = [];\n    }\n\n    ///////////////\n    // Private\n    ///////////////\n\n    function getProtData(keySystem) {\n        let protData = null;\n        if (keySystem) {\n            const keySystemString = keySystem.systemString;\n\n            if (protDataSet) {\n                protData = (keySystemString in protDataSet) ? protDataSet[keySystemString] : null;\n            }\n        }\n        return protData;\n    }\n\n    function getKeySystemConfiguration(keySystem) {\n        const protData = getProtData(keySystem);\n        const audioCapabilities = [];\n        const videoCapabilities = [];\n        const audioRobustness = (protData && protData.audioRobustness && protData.audioRobustness.length > 0) ? protData.audioRobustness : robustnessLevel;\n        const videoRobustness = (protData && protData.videoRobustness && protData.videoRobustness.length > 0) ? protData.videoRobustness : robustnessLevel;\n        const ksSessionType = getSessionType(keySystem);\n        const distinctiveIdentifier = (protData && protData.distinctiveIdentifier) ? protData.distinctiveIdentifier : 'optional';\n        const persistentState = (protData && protData.persistentState) ? protData.persistentState : (ksSessionType === 'temporary') ? 'optional' : 'required';\n\n        mediaInfoArr.forEach((media) => {\n            if (media.type === constants.AUDIO) {\n                audioCapabilities.push(new MediaCapability(media.codec, audioRobustness));\n            } else if (media.type === constants.VIDEO) {\n                videoCapabilities.push(new MediaCapability(media.codec, videoRobustness));\n            }\n        });\n\n        return new KeySystemConfiguration(\n            audioCapabilities, videoCapabilities, distinctiveIdentifier,\n            persistentState,\n            [ksSessionType]);\n    }\n\n    function getSessionType(keySystem) {\n        const protData = getProtData(keySystem);\n        const ksSessionType = (protData && protData.sessionType) ? protData.sessionType : sessionType;\n        return ksSessionType;\n    }\n\n    function selectKeySystem(supportedKS, fromManifest) {\n\n        // Reorder key systems according to priority order provided in protectionData\n        supportedKS = supportedKS.sort((ksA, ksB) => {\n            let indexA = (protDataSet && protDataSet[ksA.ks.systemString] && protDataSet[ksA.ks.systemString].priority >= 0) ? protDataSet[ksA.ks.systemString].priority : supportedKS.length;\n            let indexB = (protDataSet && protDataSet[ksB.ks.systemString] && protDataSet[ksB.ks.systemString].priority >= 0) ? protDataSet[ksB.ks.systemString].priority : supportedKS.length;\n            return indexA - indexB;\n        });\n\n\n        // First time, so we need to select a key system\n        if (keySystem === undefined) {\n            _selectInitialKeySystem(supportedKS, fromManifest);\n        }\n\n        // We already selected a key system. we only need to trigger a new license exchange if the init data has changed\n        else if (keySystem) {\n            _selectWithExistingKeySystem(supportedKS, fromManifest);\n        }\n\n        // We are in the process of selecting a key system, so just save the data which might be coming from additional AdaptationSets.\n        else {\n            pendingNeedKeyData.push(supportedKS);\n        }\n    }\n\n    function _selectWithExistingKeySystem(supportedKS, fromManifest) {\n        const self = this;\n        const requestedKeySystems = [];\n\n        const ksIdx = supportedKS.findIndex((entry) => {\n            return entry.ks === keySystem;\n        });\n\n        if (ksIdx === -1 || !supportedKS[ksIdx].initData) {\n            return;\n        }\n\n        //  we only need to call this if the init data has changed\n        const initDataForKs = CommonEncryption.getPSSHForKeySystem(keySystem, supportedKS[ksIdx].initData);\n        if (_isInitDataDuplicate(initDataForKs)) {\n            return;\n        }\n\n        requestedKeySystems.push({\n            ks: supportedKS[ksIdx].ks,\n            configs: [getKeySystemConfiguration(keySystem)]\n        });\n\n        // Ensure that we would be granted key system access using the key\n        // system and codec information\n        const onKeySystemAccessComplete = function (event) {\n            eventBus.off(events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n            if (event.error) {\n                if (!fromManifest) {\n                    eventBus.trigger(events.KEY_SYSTEM_SELECTED, { error: new DashJSError(ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE, ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE + event.error) });\n                }\n            } else {\n                logger.info('DRM: KeySystem Access Granted');\n                eventBus.trigger(events.KEY_SYSTEM_SELECTED, { data: event.data });\n                const protData = getProtData(keySystem);\n                if (protectionKeyController.isClearKey(keySystem)) {\n                    // For Clearkey: if parameters for generating init data was provided by the user, use them for generating\n                    // initData and overwrite possible initData indicated in encrypted event (EME)\n                    if (protData && protData.hasOwnProperty('clearkeys')) {\n                        const initData = { kids: Object.keys(protData.clearkeys) };\n                        supportedKS[ksIdx].initData = new TextEncoder().encode(JSON.stringify(initData));\n                    }\n                }\n                if (supportedKS[ksIdx].sessionId) {\n                    // Load MediaKeySession with sessionId\n                    loadKeySession(supportedKS[ksIdx].sessionId, supportedKS[ksIdx].initData);\n                } else if (supportedKS[ksIdx].initData) {\n                    // Create new MediaKeySession with initData\n                    createKeySession(supportedKS[ksIdx].initData, supportedKS[ksIdx].cdmData);\n                }\n            }\n        };\n\n        eventBus.on(events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n        protectionModel.requestKeySystemAccess(requestedKeySystems);\n    }\n\n    function _selectInitialKeySystem(supportedKS, fromManifest) {\n        const self = this;\n        const requestedKeySystems = [];\n        let ksIdx;\n\n        // First time through, so we need to select a key system\n        keySystem = null;\n        pendingNeedKeyData.push(supportedKS);\n\n        // Add all key systems to our request list since we have yet to select a key system\n        for (let i = 0; i < supportedKS.length; i++) {\n            requestedKeySystems.push({\n                ks: supportedKS[i].ks,\n                configs: [getKeySystemConfiguration(supportedKS[i].ks)]\n            });\n        }\n\n        let keySystemAccess;\n        const onKeySystemAccessComplete = function (event) {\n            eventBus.off(events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n            if (event.error) {\n                keySystem = undefined;\n                eventBus.off(events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\n                if (!fromManifest) {\n                    eventBus.trigger(events.KEY_SYSTEM_SELECTED, {\n                        data: null,\n                        error: new DashJSError(ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE, ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE + event.error)\n                    });\n                }\n            } else {\n                keySystemAccess = event.data;\n                logger.info('DRM: KeySystem Access Granted (' + keySystemAccess.keySystem.systemString + ')!  Selecting key system...');\n                protectionModel.selectKeySystem(keySystemAccess);\n            }\n        };\n        var onKeySystemSelected = function (event) {\n            eventBus.off(events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\n            eventBus.off(events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n            if (!event.error) {\n                if (!protectionModel) {\n                    return;\n                }\n                keySystem = protectionModel.getKeySystem();\n                eventBus.trigger(events.KEY_SYSTEM_SELECTED, { data: keySystemAccess });\n                // Set server certificate from protData\n                const protData = getProtData(keySystem);\n                if (protData && protData.serverCertificate && protData.serverCertificate.length > 0) {\n                    protectionModel.setServerCertificate(BASE64.decodeArray(protData.serverCertificate).buffer);\n                }\n\n                // Create key session for the remaining AdaptationSets which have been added to pendingNeedKeyData\n                for (let i = 0; i < pendingNeedKeyData.length; i++) {\n                    for (ksIdx = 0; ksIdx < pendingNeedKeyData[i].length; ksIdx++) {\n                        if (keySystem === pendingNeedKeyData[i][ksIdx].ks) {\n                            if (protectionKeyController.isClearKey(keySystem)) {\n                                // For Clearkey: if parameters for generating init data was provided by the user, use them for generating\n                                // initData and overwrite possible initData indicated in encrypted event (EME)\n                                if (protData && protData.hasOwnProperty('clearkeys')) {\n                                    const initData = { kids: Object.keys(protData.clearkeys) };\n                                    pendingNeedKeyData[i][ksIdx].initData = new TextEncoder().encode(JSON.stringify(initData));\n                                }\n                            }\n                            if (pendingNeedKeyData[i][ksIdx].sessionId) {\n                                // Load MediaKeySession with sessionId\n                                loadKeySession(pendingNeedKeyData[i][ksIdx].sessionId, pendingNeedKeyData[i][ksIdx].initData);\n                            } else if (pendingNeedKeyData[i][ksIdx].initData !== null) {\n                                // Create new MediaKeySession with initData\n                                createKeySession(pendingNeedKeyData[i][ksIdx].initData, pendingNeedKeyData[i][ksIdx].cdmData);\n                            }\n                            break;\n                        }\n                    }\n                }\n            } else {\n                keySystem = undefined;\n                if (!fromManifest) {\n                    eventBus.trigger(events.KEY_SYSTEM_SELECTED, {\n                        data: null,\n                        error: new DashJSError(ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE, ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE + 'Error selecting key system! -- ' + event.error)\n                    });\n                }\n            }\n        };\n\n        eventBus.on(events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\n        eventBus.on(events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n        protectionModel.requestKeySystemAccess(requestedKeySystems);\n    }\n\n    function sendLicenseRequestCompleteEvent(data, error) {\n        eventBus.trigger(events.LICENSE_REQUEST_COMPLETE, { data: data, error: error });\n    }\n\n    function onKeyStatusChanged(e) {\n        if (e.error) {\n            eventBus.trigger(events.KEY_STATUSES_CHANGED, { data: null, error: e.error });\n        } else {\n            logger.debug('DRM: key status = ' + e.status);\n        }\n    }\n\n    function onKeyMessage(e) {\n        logger.debug('DRM: onKeyMessage');\n\n        // Dispatch event to applications indicating we received a key message\n        const keyMessage = e.data;\n        eventBus.trigger(events.KEY_MESSAGE, { data: keyMessage });\n        const messageType = (keyMessage.messageType) ? keyMessage.messageType : 'license-request';\n        const message = keyMessage.message;\n        const sessionToken = keyMessage.sessionToken;\n        const protData = getProtData(keySystem);\n        const keySystemString = keySystem ? keySystem.systemString : null;\n        const licenseServerData = protectionKeyController.getLicenseServer(keySystem, protData, messageType);\n        const eventData = { sessionToken: sessionToken, messageType: messageType };\n\n        // Ensure message from CDM is not empty\n        if (!message || message.byteLength === 0) {\n            sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE, ProtectionErrors.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE));\n            return;\n        }\n\n        // Message not destined for license server\n        if (!licenseServerData) {\n            logger.debug('DRM: License server request not required for this message (type = ' + e.data.messageType + ').  Session ID = ' + sessionToken.getSessionID());\n            sendLicenseRequestCompleteEvent(eventData);\n            return;\n        }\n\n        // Perform any special handling for ClearKey\n        if (protectionKeyController.isClearKey(keySystem)) {\n            const clearkeys = protectionKeyController.processClearKeyLicenseRequest(keySystem, protData, message);\n            if (clearkeys) {\n                logger.debug('DRM: ClearKey license request handled by application!');\n                sendLicenseRequestCompleteEvent(eventData);\n                protectionModel.updateKeySession(sessionToken, clearkeys);\n                return;\n            }\n        }\n\n        // All remaining key system scenarios require a request to a remote license server\n        // Determine license server URL\n        let url = null;\n        if (protData && protData.serverURL) {\n            const serverURL = protData.serverURL;\n            if (typeof serverURL === 'string' && serverURL !== '') {\n                url = serverURL;\n            } else if (typeof serverURL === 'object' && serverURL.hasOwnProperty(messageType)) {\n                url = serverURL[messageType];\n            }\n        } else if (protData && protData.laURL && protData.laURL !== '') {\n            // TODO: Deprecated!\n            url = protData.laURL;\n        } else {\n            // For clearkey use the url defined in the manifest\n            if (protectionKeyController.isClearKey(keySystem)) {\n                url = keySystem.getLicenseServerUrlFromMediaInfo(mediaInfoArr);\n            } else {\n                const psshData = CommonEncryption.getPSSHData(sessionToken.initData);\n                url = keySystem.getLicenseServerURLFromInitData(psshData);\n                if (!url) {\n                    url = e.data.laURL;\n                }\n            }\n        }\n        // Possibly update or override the URL based on the message\n        url = licenseServerData.getServerURLFromMessage(url, message, messageType);\n\n        // Ensure valid license server URL\n        if (!url) {\n            sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE, ProtectionErrors.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE));\n            return;\n        }\n\n        // Set optional XMLHttpRequest headers from protection data and message\n        const reqHeaders = {};\n        let withCredentials = false;\n        const updateHeaders = function (headers) {\n            if (headers) {\n                for (const key in headers) {\n                    if ('authorization' === key.toLowerCase()) {\n                        withCredentials = true;\n                    }\n                    reqHeaders[key] = headers[key];\n                }\n            }\n        };\n        if (protData) {\n            updateHeaders(protData.httpRequestHeaders);\n        }\n        updateHeaders(keySystem.getRequestHeadersFromMessage(message));\n\n        // Overwrite withCredentials property from protData if present\n        if (protData && typeof protData.withCredentials == 'boolean') {\n            withCredentials = protData.withCredentials;\n        }\n\n        const reportError = function (xhr, eventData, keySystemString, messageType) {\n            const errorMsg = ((xhr.response) ? licenseServerData.getErrorResponse(xhr.response, keySystemString, messageType) : 'NONE');\n            sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,\n                ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + keySystemString + ' update, XHR complete. status is \"' +\n                xhr.statusText + '\" (' + xhr.status + '), readyState is ' + xhr.readyState + '.  Response is ' + errorMsg));\n        };\n\n        const onLoad = function (xhr) {\n            if (!protectionModel) {\n                return;\n            }\n\n            if (xhr.status >= 200 && xhr.status <= 299) {\n                let licenseResponse = new LicenseResponse(xhr.responseURL, Utils.parseHttpHeaders(xhr.getAllResponseHeaders ? xhr.getAllResponseHeaders() : null), xhr.response);\n                applyFilters(licenseResponseFilters, licenseResponse).then(() => {\n                    const licenseMessage = licenseServerData.getLicenseMessage(licenseResponse.data, keySystemString, messageType);\n                    if (licenseMessage !== null) {\n                        sendLicenseRequestCompleteEvent(eventData);\n                        protectionModel.updateKeySession(sessionToken, licenseMessage);\n                    } else {\n                        reportError(xhr, eventData, keySystemString, messageType);\n                    }\n                });\n            } else {\n                reportError(xhr, eventData, keySystemString, messageType);\n            }\n        };\n\n        const onAbort = function (xhr) {\n            sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,\n                ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + keySystemString + ' update, XHR aborted. status is \"' +\n                xhr.statusText + '\" (' + xhr.status + '), readyState is ' + xhr.readyState));\n        };\n\n        const onError = function (xhr) {\n            sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,\n                ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + keySystemString + ' update, XHR error. status is \"' +\n                xhr.statusText + '\" (' + xhr.status + '), readyState is ' + xhr.readyState));\n        };\n\n        const reqPayload = keySystem.getLicenseRequestFromMessage(message);\n        const reqMethod = licenseServerData.getHTTPMethod(messageType);\n        const responseType = licenseServerData.getResponseType(keySystemString, messageType);\n        const timeout = protData && !isNaN(protData.httpTimeout) ? protData.httpTimeout : LICENSE_SERVER_REQUEST_DEFAULT_TIMEOUT;\n        const sessionId = sessionToken.getSessionID() || null;\n\n        let licenseRequest = new LicenseRequest(url, reqMethod, responseType, reqHeaders, withCredentials, messageType, sessionId, reqPayload);\n        const retryAttempts = !isNaN(settings.get().streaming.retryAttempts[HTTPRequest.LICENSE]) ? settings.get().streaming.retryAttempts[HTTPRequest.LICENSE] : LICENSE_SERVER_REQUEST_RETRIES;\n            applyFilters(licenseRequestFilters, licenseRequest).then(() => {\n                doLicenseRequest(licenseRequest, retryAttempts, timeout, onLoad, onAbort, onError);\n            });\n    }\n\n    // Implement license requests with a retry mechanism to avoid temporary network issues to affect playback experience\n    function doLicenseRequest(request, retriesCount, timeout, onLoad, onAbort, onError) {\n        const xhr = new XMLHttpRequest();\n\n        if (settings.get().streaming.cmcd && settings.get().streaming.cmcd.enabled) {\n            const cmcdMode = settings.get().streaming.cmcd.mode;\n            if (cmcdMode === Constants.CMCD_MODE_QUERY) {\n                const cmcdParams = cmcdModel.getQueryParameter({\n                    url: request.url,\n                    type: HTTPRequest.LICENSE\n                });\n\n                if (cmcdParams) {\n                    request.url = Utils.addAditionalQueryParameterToUrl(request.url, [cmcdParams]);\n                }\n            }\n        }\n\n        xhr.open(request.method, request.url, true);\n        xhr.responseType = request.responseType;\n        xhr.withCredentials = request.withCredentials;\n        if (timeout > 0) {\n            xhr.timeout = timeout;\n        }\n        for (const key in request.headers) {\n            xhr.setRequestHeader(key, request.headers[key]);\n        }\n\n        if (settings.get().streaming.cmcd && settings.get().streaming.cmcd.enabled) {\n            const cmcdMode = settings.get().streaming.cmcd.mode;\n            if (cmcdMode === Constants.CMCD_MODE_HEADER) {\n                const cmcdHeaders = cmcdModel.getHeaderParameters({\n                    url: request.url,\n                    type: HTTPRequest.LICENSE\n                });\n\n                if (cmcdHeaders) {\n                    for (const header in cmcdHeaders) {\n                        let value = cmcdHeaders[header];\n                        if (value) {\n                            xhr.setRequestHeader(header, value);\n                        }\n                    }\n                }\n            }\n        }\n\n        const retryRequest = function () {\n            // fail silently and retry\n            retriesCount--;\n            const retryInterval = !isNaN(settings.get().streaming.retryIntervals[HTTPRequest.LICENSE]) ? settings.get().streaming.retryIntervals[HTTPRequest.LICENSE] : LICENSE_SERVER_REQUEST_RETRY_INTERVAL;\n            setTimeout(function () {\n                doLicenseRequest(request, retriesCount, timeout, onLoad, onAbort, onError);\n            }, retryInterval);\n        };\n\n        xhr.onload = function () {\n            if (this.status >= 200 && this.status <= 299 || retriesCount <= 0) {\n                onLoad(this);\n            } else {\n                logger.warn('License request failed (' + this.status + '). Retrying it... Pending retries: ' + retriesCount);\n                retryRequest();\n            }\n        };\n\n        xhr.ontimeout = xhr.onerror = function () {\n            if (retriesCount <= 0) {\n                onError(this);\n            } else {\n                logger.warn('License request network request failed . Retrying it... Pending retries: ' + retriesCount);\n                retryRequest();\n            }\n        };\n\n        xhr.onabort = function () {\n            onAbort(this);\n        };\n\n        // deprecated, to be removed\n        eventBus.trigger(events.LICENSE_REQUEST_SENDING, {\n            url: request.url,\n            headers: request.headers,\n            payload: request.data,\n            sessionId: request.sessionId\n        });\n\n        xhr.send(request.data);\n    }\n\n    function onNeedKey(event, retry) {\n        logger.debug('DRM: onNeedKey');\n        // Ignore non-cenc initData\n        if (event.key.initDataType !== 'cenc') {\n            logger.warn('DRM:  Only \\'cenc\\' initData is supported!  Ignoring initData of type: ' + event.key.initDataType);\n            return;\n        }\n\n        if (mediaInfoArr.length === 0) {\n            logger.warn('DRM: onNeedKey called before initializeForMedia, wait until initialized');\n            retry = typeof retry === 'undefined' ? 1 : retry + 1;\n            if (retry < NEEDKEY_BEFORE_INITIALIZE_RETRIES) {\n                needkeyRetries.push(setTimeout(() => {\n                    onNeedKey(event, retry);\n                }, NEEDKEY_BEFORE_INITIALIZE_TIMEOUT));\n                return;\n            }\n\n        }\n\n        // Some browsers return initData as Uint8Array (IE), some as ArrayBuffer (Chrome).\n        // Convert to ArrayBuffer\n        let abInitData = event.key.initData;\n        if (ArrayBuffer.isView(abInitData)) {\n            abInitData = abInitData.buffer;\n        }\n\n        // If key system has already been selected and initData already seen, then do nothing\n        if (keySystem) {\n            const initDataForKS = CommonEncryption.getPSSHForKeySystem(keySystem, abInitData);\n            if (initDataForKS) {\n\n                // Check for duplicate initData\n                if (_isInitDataDuplicate(initDataForKS)) {\n                    return;\n                }\n            }\n        }\n\n        logger.debug('DRM: initData:', String.fromCharCode.apply(null, new Uint8Array(abInitData)));\n\n        const supportedKS = protectionKeyController.getSupportedKeySystems(abInitData, protDataSet);\n        if (supportedKS.length === 0) {\n            logger.debug('DRM: Received needkey event with initData, but we don\\'t support any of the key systems!');\n            return;\n        }\n\n        selectKeySystem(supportedKS, false);\n    }\n\n    function getKeySystems() {\n        return protectionKeyController ? protectionKeyController.getKeySystems() : [];\n    }\n\n    function setKeySystems(keySystems) {\n        if (protectionKeyController) {\n            protectionKeyController.setKeySystems(keySystems);\n        }\n    }\n\n    function setLicenseRequestFilters(filters) {\n        licenseRequestFilters = filters;\n    }\n\n    function setLicenseResponseFilters(filters) {\n        licenseResponseFilters = filters;\n    }\n\n    function applyFilters(filters, param) {\n        if (!filters) return Promise.resolve();\n        return filters.reduce((prev, next) => {\n            return prev.then(() => {\n                return next(param);\n            });\n        }, Promise.resolve());\n    }\n\n    instance = {\n        initializeForMedia,\n        clearMediaInfoArrayByStreamId,\n        createKeySession,\n        loadKeySession,\n        removeKeySession,\n        closeKeySession,\n        setServerCertificate,\n        setMediaElement,\n        setSessionType,\n        setRobustnessLevel,\n        setProtectionData,\n        getSupportedKeySystemsFromContentProtection,\n        getKeySystems,\n        setKeySystems,\n        setLicenseRequestFilters,\n        setLicenseResponseFilters,\n        stop,\n        reset\n    };\n\n    setup();\n    return instance;\n}\n\nProtectionController.__dashjs_factory_name = 'ProtectionController';\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionController); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport CommonEncryption from './../CommonEncryption';\nimport KeySystemClearKey from './../drm/KeySystemClearKey';\nimport KeySystemW3CClearKey from './../drm/KeySystemW3CClearKey';\nimport KeySystemWidevine from './../drm/KeySystemWidevine';\nimport KeySystemPlayReady from './../drm/KeySystemPlayReady';\nimport DRMToday from './../servers/DRMToday';\nimport PlayReady from './../servers/PlayReady';\nimport Widevine from './../servers/Widevine';\nimport ClearKey from './../servers/ClearKey';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\n/**\n * @module ProtectionKeyController\n * @ignore\n * @description Media protection key system functionality that can be modified/overridden by applications\n */\nfunction ProtectionKeyController() {\n\n    let context = this.context;\n\n    let instance,\n        debug,\n        logger,\n        keySystems,\n        BASE64,\n        clearkeyKeySystem,\n        clearkeyW3CKeySystem;\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.debug) {\n            debug = config.debug;\n            logger = debug.getLogger(instance);\n        }\n\n        if (config.BASE64) {\n            BASE64 = config.BASE64;\n        }\n    }\n\n    function initialize() {\n        keySystems = [];\n\n        let keySystem;\n\n        // PlayReady\n        keySystem = KeySystemPlayReady(context).getInstance({BASE64: BASE64});\n        keySystems.push(keySystem);\n\n        // Widevine\n        keySystem = KeySystemWidevine(context).getInstance({BASE64: BASE64});\n        keySystems.push(keySystem);\n\n        // ClearKey\n        keySystem = KeySystemClearKey(context).getInstance({BASE64: BASE64});\n        keySystems.push(keySystem);\n        clearkeyKeySystem = keySystem;\n\n        // W3C ClearKey\n        keySystem = KeySystemW3CClearKey(context).getInstance({BASE64: BASE64, debug: debug});\n        keySystems.push(keySystem);\n        clearkeyW3CKeySystem = keySystem;\n    }\n\n    /**\n     * Returns a prioritized list of key systems supported\n     * by this player (not necessarily those supported by the\n     * user agent)\n     *\n     * @returns {Array.<KeySystem>} a prioritized\n     * list of key systems\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getKeySystems() {\n        return keySystems;\n    }\n\n    /**\n     * Sets the prioritized list of key systems to be supported\n     * by this player.\n     *\n     * @param {Array.<KeySystem>} newKeySystems the new prioritized\n     * list of key systems\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function setKeySystems(newKeySystems) {\n        keySystems = newKeySystems;\n    }\n\n    /**\n     * Returns the key system associated with the given key system string\n     * name (i.e. 'org.w3.clearkey')\n     *\n     * @param {string} systemString the system string\n     * @returns {KeySystem|null} the key system\n     * or null if no supported key system is associated with the given key\n     * system string\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getKeySystemBySystemString(systemString) {\n        for (let i = 0; i < keySystems.length; i++) {\n            if (keySystems[i].systemString === systemString) {\n                return keySystems[i];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Determines whether the given key system is ClearKey.  This is\n     * necessary because the EME spec defines ClearKey and its method\n     * for providing keys to the key session; and this method has changed\n     * between the various API versions.  Our EME-specific ProtectionModels\n     * must know if the system is ClearKey so that it can format the keys\n     * according to the particular spec version.\n     *\n     * @param {Object} keySystem the key\n     * @returns {boolean} true if this is the ClearKey key system, false\n     * otherwise\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function isClearKey(keySystem) {\n        return (keySystem === clearkeyKeySystem || keySystem === clearkeyW3CKeySystem);\n    }\n\n    /**\n     * Check equality of initData array buffers.\n     *\n     * @param {ArrayBuffer} initData1 - first initData\n     * @param {ArrayBuffer} initData2 - second initData\n     * @returns {boolean} true if the initData arrays are equal in size and\n     * contents, false otherwise\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function initDataEquals(initData1, initData2) {\n        if (initData1.byteLength === initData2.byteLength) {\n            let data1 = new Uint8Array(initData1);\n            let data2 = new Uint8Array(initData2);\n\n            for (let j = 0; j < data1.length; j++) {\n                if (data1[j] !== data2[j]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Returns a set of supported key systems and CENC initialization data\n     * from the given array of ContentProtection elements.  Only\n     * key systems that are supported by this player will be returned.\n     * Key systems are returned in priority order (highest first).\n     *\n     * @param {Array.<Object>} cps - array of content protection elements parsed\n     * from the manifest\n     * @returns {Array.<Object>} array of objects indicating which supported key\n     * systems were found.  Empty array is returned if no\n     * supported key systems were found\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getSupportedKeySystemsFromContentProtection(cps) {\n        let cp, ks, ksIdx, cpIdx;\n        let supportedKS = [];\n\n        if (cps) {\n            const cencContentProtection = CommonEncryption.findCencContentProtection(cps);\n            for (ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\n                ks = keySystems[ksIdx];\n                for (cpIdx = 0; cpIdx < cps.length; ++cpIdx) {\n                    cp = cps[cpIdx];\n                    if (cp.schemeIdUri.toLowerCase() === ks.schemeIdURI) {\n                        // Look for DRM-specific ContentProtection\n                        let initData = ks.getInitData(cp, cencContentProtection);\n\n                        supportedKS.push({\n                            ks: keySystems[ksIdx],\n                            initData: initData,\n                            cdmData: ks.getCDMData(),\n                            sessionId: ks.getSessionId(cp)\n                        });\n                    }\n                }\n            }\n        }\n        return supportedKS;\n    }\n\n    /**\n     * Returns key systems supported by this player for the given PSSH\n     * initializationData. Only key systems supported by this player\n     * that have protection data present will be returned.  Key systems are returned in priority order\n     * (highest priority first)\n     *\n     * @param {ArrayBuffer} initData Concatenated PSSH data for all DRMs\n     * supported by the content\n     * @param {ProtectionData} protDataSet user specified protection data - license server url etc\n     * supported by the content\n     * @returns {Array.<Object>} array of objects indicating which supported key\n     * systems were found.  Empty array is returned if no\n     * supported key systems were found\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getSupportedKeySystems(initData, protDataSet) {\n        let supportedKS = [];\n        let pssh = CommonEncryption.parsePSSHList(initData);\n        let ks, keySystemString, shouldNotFilterOutKeySystem;\n\n        for (let ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\n            ks = keySystems[ksIdx];\n            keySystemString = ks.systemString;\n            shouldNotFilterOutKeySystem = (protDataSet) ? keySystemString in protDataSet : true;\n\n            if (ks.uuid in pssh && shouldNotFilterOutKeySystem) {\n                supportedKS.push({\n                    ks: ks,\n                    initData: pssh[ks.uuid],\n                    cdmData: ks.getCDMData(),\n                    sessionId: ks.getSessionId()\n                });\n            }\n        }\n        return supportedKS;\n    }\n\n    /**\n     * Returns the license server implementation data that should be used for this request.\n     *\n     * @param {KeySystem} keySystem the key system\n     * associated with this license request\n     * @param {ProtectionData} protData protection data to use for the\n     * request\n     * @param {string} [messageType=\"license-request\"] the message type associated with this\n     * request.  Supported message types can be found\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\n     * @returns {LicenseServer|null} the license server\n     * implementation that should be used for this request or null if the player should not\n     * pass messages of the given type to a license server\n     * @memberof module:ProtectionKeyController\n     * @instance\n     *\n     */\n    function getLicenseServer(keySystem, protData, messageType) {\n\n        // Our default server implementations do not do anything with \"license-release\" or\n        // \"individualization-request\" messages, so we just send a success event\n        if (messageType === 'license-release' || messageType === 'individualization-request') {\n            return null;\n        }\n\n        let licenseServerData = null;\n        if (protData && protData.hasOwnProperty('drmtoday')) {\n            licenseServerData = DRMToday(context).getInstance({BASE64: BASE64});\n        } else if (keySystem.systemString === ProtectionConstants.WIDEVINE_KEYSTEM_STRING) {\n            licenseServerData = Widevine(context).getInstance();\n        } else if (keySystem.systemString === ProtectionConstants.PLAYREADY_KEYSTEM_STRING) {\n            licenseServerData = PlayReady(context).getInstance();\n        } else if (keySystem.systemString === ProtectionConstants.CLEARKEY_KEYSTEM_STRING) {\n            licenseServerData = ClearKey(context).getInstance();\n        }\n\n        return licenseServerData;\n    }\n\n    /**\n     * Allows application-specific retrieval of ClearKey keys.\n     *\n     * @param {KeySystem} clearkeyKeySystem They exact ClearKey System to be used\n     * @param {ProtectionData} protData protection data to use for the\n     * request\n     * @param {ArrayBuffer} message the key message from the CDM\n     * @return {ClearKeyKeySet|null} the clear keys associated with\n     * the request or null if no keys can be returned by this function\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function processClearKeyLicenseRequest(clearkeyKeySystem, protData, message) {\n        try {\n            return clearkeyKeySystem.getClearKeysFromProtectionData(protData, message);\n        } catch (error) {\n            logger.error('Failed to retrieve clearkeys from ProtectionData');\n            return null;\n        }\n    }\n\n    function setProtectionData(protectionDataSet) {\n        var getProtectionData = function (keySystemString) {\n            var protData = null;\n            if (protectionDataSet) {\n                protData = (keySystemString in protectionDataSet) ? protectionDataSet[keySystemString] : null;\n            }\n            return protData;\n        };\n\n        for (var i = 0; i < keySystems.length; i++) {\n            var keySystem = keySystems[i];\n            if (keySystem.hasOwnProperty('init')) {\n                keySystem.init(getProtectionData(keySystem.systemString));\n            }\n        }\n    }\n\n    instance = {\n        initialize: initialize,\n        setProtectionData: setProtectionData,\n        isClearKey: isClearKey,\n        initDataEquals: initDataEquals,\n        getKeySystems: getKeySystems,\n        setKeySystems: setKeySystems,\n        getKeySystemBySystemString: getKeySystemBySystemString,\n        getSupportedKeySystemsFromContentProtection: getSupportedKeySystemsFromContentProtection,\n        getSupportedKeySystems: getSupportedKeySystems,\n        getLicenseServer: getLicenseServer,\n        processClearKeyLicenseRequest: processClearKeyLicenseRequest,\n        setConfig: setConfig\n    };\n\n    return instance;\n}\n\nProtectionKeyController.__dashjs_factory_name = 'ProtectionKeyController';\nexport default dashjs.FactoryMaker.getSingletonFactory(ProtectionKeyController); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport KeyPair from '../vo/KeyPair';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\nimport CommonEncryption from '../CommonEncryption';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nconst uuid = 'e2719d58-a985-b3c9-781a-b030af78d30e';\nconst systemString = ProtectionConstants.CLEARKEY_KEYSTEM_STRING;\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemClearKey(config) {\n\n    config = config || {};\n    let instance;\n    const BASE64 = config.BASE64;\n    const LICENSE_SERVER_MANIFEST_CONFIGURATIONS = {\n        attributes: ['Laurl', 'laurl'],\n        prefixes: ['clearkey', 'dashif']\n    };\n\n    /**\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\n     *\n     * @param {ProtectionData} protectionData the protection data\n     * @param {ArrayBuffer} message the ClearKey CDM message\n     * @returns {ClearKeyKeySet} the key set or null if none found\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\n     * protection data\n     * @memberof KeySystemClearKey\n     */\n    function getClearKeysFromProtectionData(protectionData, message) {\n        let clearkeySet = null;\n        if (protectionData) {\n            // ClearKey is the only system that does not require a license server URL, so we\n            // handle it here when keys are specified in protection data\n            const jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\n            const keyPairs = [];\n            for (let i = 0; i < jsonMsg.kids.length; i++) {\n                const clearkeyID = jsonMsg.kids[i];\n                const clearkey = (protectionData.clearkeys && protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\n                if (!clearkey) {\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\n                }\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\n            }\n            clearkeySet = new ClearKeyKeySet(keyPairs);\n        }\n        return clearkeySet;\n    }\n\n    function getInitData(cp, cencContentProtection) {\n        try {\n            let initData = CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\n\n            if (!initData && cencContentProtection) {\n                const cencDefaultKid = cencDefaultKidToBase64Representation(cencContentProtection['cenc:default_KID']);\n                const data = {kids: [cencDefaultKid]};\n                initData = new TextEncoder().encode(JSON.stringify(data));\n            }\n\n            return initData;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function cencDefaultKidToBase64Representation(cencDefaultKid) {\n        try {\n            let kid = cencDefaultKid.replace(/-/g, '');\n            kid = btoa(kid.match(/\\w{2}/g).map((a) => {\n                return String.fromCharCode(parseInt(a, 16));\n            }).join(''));\n            return kid.replace(/=/g, '');\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function getRequestHeadersFromMessage(/*message*/) {\n        // Set content type to application/json by default\n        return {\n            'Content-Type': 'application/json'\n        };\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\n    }\n\n    function getLicenseServerURLFromInitData(/*initData*/) {\n        return null;\n    }\n\n    function getLicenseServerUrlFromMediaInfo(mediaInfo) {\n        try {\n            if (!mediaInfo || mediaInfo.length === 0) {\n                return null;\n            }\n            let i = 0;\n            let licenseServer = null;\n            while (i < mediaInfo.length && !licenseServer) {\n                const info = mediaInfo[i];\n                if (info && info.contentProtection && info.contentProtection.length > 0) {\n                    const clearkeyProtData = info.contentProtection.filter((cp) => {\n                        return cp.schemeIdUri && cp.schemeIdUri === schemeIdURI;\n                    });\n                    if (clearkeyProtData && clearkeyProtData.length > 0) {\n                        let j = 0;\n                        while (j < clearkeyProtData.length && !licenseServer) {\n                            const ckData = clearkeyProtData[j];\n                            let k = 0;\n                            while (k < LICENSE_SERVER_MANIFEST_CONFIGURATIONS.attributes.length && !licenseServer) {\n                                let l = 0;\n                                const attribute = LICENSE_SERVER_MANIFEST_CONFIGURATIONS.attributes[k];\n                                while (l < LICENSE_SERVER_MANIFEST_CONFIGURATIONS.prefixes.length && !licenseServer) {\n                                    const prefix = LICENSE_SERVER_MANIFEST_CONFIGURATIONS.prefixes[l];\n                                    if (ckData[attribute] && ckData[attribute].__prefix && ckData[attribute].__prefix === prefix && ckData[attribute].__text) {\n                                        licenseServer = ckData[attribute].__text;\n                                    }\n                                    l += 1;\n                                }\n                                k += 1;\n                            }\n                            j += 1;\n                        }\n                    }\n                }\n                i += 1;\n            }\n            return licenseServer;\n        } catch\n            (e) {\n            return null;\n        }\n    }\n\n    function getCDMData() {\n        return null;\n    }\n\n    function getSessionId(/*cp*/) {\n        return null;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n        getCDMData: getCDMData,\n        getSessionId: getSessionId,\n        getLicenseServerUrlFromMediaInfo,\n        getClearKeysFromProtectionData: getClearKeysFromProtectionData\n    };\n\n    return instance;\n}\n\nKeySystemClearKey.__dashjs_factory_name = 'KeySystemClearKey';\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemClearKey); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Microsoft PlayReady DRM\n *\n * @class\n * @implements KeySystem\n */\nimport CommonEncryption from '../CommonEncryption';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nconst uuid = '9a04f079-9840-4286-ab92-e65be0885f95';\nconst systemString = ProtectionConstants.PLAYREADY_KEYSTEM_STRING;\nconst schemeIdURI = 'urn:uuid:' + uuid;\nconst PRCDMData = '<PlayReadyCDMData type=\"LicenseAcquisition\"><LicenseAcquisition version=\"1.0\" Proactive=\"false\"><CustomData encoding=\"base64encoded\">%CUSTOMDATA%</CustomData></LicenseAcquisition></PlayReadyCDMData>';\nlet protData;\n\nfunction KeySystemPlayReady(config) {\n\n    config = config || {};\n    let instance;\n    let messageFormat = 'utf-16';\n    const BASE64 = config.BASE64;\n\n    function checkConfig() {\n        if (!BASE64 || !BASE64.hasOwnProperty('decodeArray') || !BASE64.hasOwnProperty('decodeArray') ) {\n            throw new Error('Missing config parameter(s)');\n        }\n    }\n\n    function getRequestHeadersFromMessage(message) {\n        let msg,\n            xmlDoc;\n        const headers = {};\n        const parser = new DOMParser();\n        const dataview = (messageFormat === 'utf-16') ? new Uint16Array(message) : new Uint8Array(message);\n\n        msg = String.fromCharCode.apply(null, dataview);\n        xmlDoc = parser.parseFromString(msg, 'application/xml');\n\n        const headerNameList = xmlDoc.getElementsByTagName('name');\n        const headerValueList = xmlDoc.getElementsByTagName('value');\n        for (let i = 0; i < headerNameList.length; i++) {\n            headers[headerNameList[i].childNodes[0].nodeValue] = headerValueList[i].childNodes[0].nodeValue;\n        }\n        // Some versions of the PlayReady CDM return 'Content' instead of 'Content-Type'.\n        // this is NOT w3c conform and license servers may reject the request!\n        // -> rename it to proper w3c definition!\n        if (headers.hasOwnProperty('Content')) {\n            headers['Content-Type'] = headers.Content;\n            delete headers.Content;\n        }\n        // Set Content-Type header by default if not provided in the the CDM message (<PlayReadyKeyMessage/>)\n        // or if the message contains directly the challenge itself (Ex: LG SmartTVs)\n        if (!headers.hasOwnProperty('Content-Type')) {\n            headers['Content-Type'] = 'text/xml; charset=utf-8';\n        }\n        return headers;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        let licenseRequest = null;\n        const parser = new DOMParser();\n        const dataview = (messageFormat === 'utf-16') ? new Uint16Array(message) : new Uint8Array(message);\n\n        checkConfig();\n        const msg = String.fromCharCode.apply(null, dataview);\n        const xmlDoc = parser.parseFromString(msg, 'application/xml');\n\n        if (xmlDoc.getElementsByTagName('PlayReadyKeyMessage')[0]) {\n            const Challenge = xmlDoc.getElementsByTagName('Challenge')[0].childNodes[0].nodeValue;\n            if (Challenge) {\n                licenseRequest = BASE64.decode(Challenge);\n            }\n        } else {\n            // The message from CDM is not a wrapped message as on IE11 and Edge,\n            // thus it contains direclty the challenge itself\n            // (note that the xmlDoc at this point may be unreadable since it may have been interpreted as UTF-16)\n            return message;\n        }\n\n        return licenseRequest;\n    }\n\n    function getLicenseServerURLFromInitData(initData) {\n        if (initData) {\n            const data = new DataView(initData);\n            const numRecords = data.getUint16(4, true);\n            let offset = 6;\n            const parser = new DOMParser();\n\n            for (let i = 0; i < numRecords; i++) {\n                // Parse the PlayReady Record header\n                const recordType = data.getUint16(offset, true);\n                offset += 2;\n                const recordLength = data.getUint16(offset, true);\n                offset += 2;\n                if (recordType !== 0x0001) {\n                    offset += recordLength;\n                    continue;\n                }\n\n                const recordData = initData.slice(offset, offset + recordLength);\n                const record = String.fromCharCode.apply(null, new Uint16Array(recordData));\n                const xmlDoc = parser.parseFromString(record, 'application/xml');\n\n                // First try <LA_URL>\n                if (xmlDoc.getElementsByTagName('LA_URL')[0]) {\n                    const laurl = xmlDoc.getElementsByTagName('LA_URL')[0].childNodes[0].nodeValue;\n                    if (laurl) {\n                        return laurl;\n                    }\n                }\n\n                // Optionally, try <LUI_URL>\n                if (xmlDoc.getElementsByTagName('LUI_URL')[0]) {\n                    const luiurl = xmlDoc.getElementsByTagName('LUI_URL')[0].childNodes[0].nodeValue;\n                    if (luiurl) {\n                        return luiurl;\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    function getInitData(cpData) {\n        // * desc@ getInitData\n        // *   generate PSSH data from PROHeader defined in MPD file\n        // *   PSSH format:\n        // *   size (4)\n        // *   box type(PSSH) (8)\n        // *   Protection SystemID (16)\n        // *   protection system data size (4) - length of decoded PROHeader\n        // *   decoded PROHeader data from MPD file\n        const PSSHBoxType = new Uint8Array([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00]); //'PSSH' 8 bytes\n        const playreadySystemID = new Uint8Array([0x9a, 0x04, 0xf0, 0x79, 0x98, 0x40, 0x42, 0x86, 0xab, 0x92, 0xe6, 0x5b, 0xe0, 0x88, 0x5f, 0x95]);\n\n        let byteCursor = 0;\n        let uint8arraydecodedPROHeader = null;\n\n        let PROSize,\n            PSSHSize,\n            PSSHBoxBuffer,\n            PSSHBox,\n            PSSHData;\n\n        checkConfig();\n        if (!cpData) {\n            return null;\n        }\n        // Handle common encryption PSSH\n        if ('pssh' in cpData) {\n            return CommonEncryption.parseInitDataFromContentProtection(cpData, BASE64);\n        }\n        // Handle native MS PlayReady ContentProtection elements\n        if ('pro' in cpData) {\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.pro.__text);\n        }\n        else if ('prheader' in cpData) {\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.prheader.__text);\n        }\n        else {\n            return null;\n        }\n\n        PROSize = uint8arraydecodedPROHeader.length;\n        PSSHSize = 0x4 + PSSHBoxType.length + playreadySystemID.length + 0x4 + PROSize;\n\n        PSSHBoxBuffer = new ArrayBuffer(PSSHSize);\n\n        PSSHBox = new Uint8Array(PSSHBoxBuffer);\n        PSSHData = new DataView(PSSHBoxBuffer);\n\n        PSSHData.setUint32(byteCursor, PSSHSize);\n        byteCursor += 0x4;\n\n        PSSHBox.set(PSSHBoxType, byteCursor);\n        byteCursor += PSSHBoxType.length;\n\n        PSSHBox.set(playreadySystemID, byteCursor);\n        byteCursor += playreadySystemID.length;\n\n        PSSHData.setUint32(byteCursor, PROSize);\n        byteCursor += 0x4;\n\n        PSSHBox.set(uint8arraydecodedPROHeader, byteCursor);\n        byteCursor += PROSize;\n\n        return PSSHBox.buffer;\n    }\n\n    /**\n     * It seems that some PlayReady implementations return their XML-based CDM\n     * messages using UTF16, while others return them as UTF8.  Use this function\n     * to modify the message format to expect when parsing CDM messages.\n     *\n     * @param {string} format the expected message format.  Either \"utf-8\" or \"utf-16\".\n     * @throws {Error} Specified message format is not one of \"utf8\" or \"utf16\"\n     */\n    function setPlayReadyMessageFormat(format) {\n        if (format !== 'utf-8' && format !== 'utf-16') {\n            throw new Error('Specified message format is not one of \"utf-8\" or \"utf-16\"');\n        }\n        messageFormat = format;\n    }\n\n    /**\n     * Initialize the Key system with protection data\n     * @param {Object} protectionData the protection data\n     */\n    function init(protectionData) {\n        if (protectionData) {\n            protData = protectionData;\n        }\n    }\n\n\n    /**\n     * Get Playready Custom data\n     */\n    function getCDMData() {\n        let customData,\n            cdmData,\n            cdmDataBytes,\n            i;\n\n        checkConfig();\n        if (protData && protData.cdmData) {\n            // Convert custom data into multibyte string\n            customData = [];\n            for (i = 0; i < protData.cdmData.length; ++i) {\n                customData.push(protData.cdmData.charCodeAt(i));\n                customData.push(0);\n            }\n            customData = String.fromCharCode.apply(null, customData);\n\n            // Encode in Base 64 the custom data string\n            customData = BASE64.encode(customData);\n\n            // Initialize CDM data with Base 64 encoded custom data\n            // (see https://msdn.microsoft.com/en-us/library/dn457361.aspx)\n            cdmData = PRCDMData.replace('%CUSTOMDATA%', customData);\n\n            // Convert CDM data into multibyte characters\n            cdmDataBytes = [];\n            for (i = 0; i < cdmData.length; ++i) {\n                cdmDataBytes.push(cdmData.charCodeAt(i));\n                cdmDataBytes.push(0);\n            }\n\n            return new Uint8Array(cdmDataBytes).buffer;\n        }\n\n        return null;\n    }\n\n    function getSessionId(cp) {\n        // Get sessionId from protectionData or from manifest\n        if (protData && protData.sessionId) {\n            return protData.sessionId;\n        } else if (cp && cp.sessionId) {\n            return cp.sessionId;\n        }\n        return null;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n        getCDMData: getCDMData,\n        getSessionId: getSessionId,\n        setPlayReadyMessageFormat: setPlayReadyMessageFormat,\n        init: init\n    };\n\n    return instance;\n}\n\nKeySystemPlayReady.__dashjs_factory_name = 'KeySystemPlayReady';\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemPlayReady); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport KeyPair from '../vo/KeyPair';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\nimport CommonEncryption from '../CommonEncryption';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nconst uuid = '1077efec-c0b2-4d02-ace3-3c1e52e2fb4b';\nconst systemString = ProtectionConstants.CLEARKEY_KEYSTEM_STRING;\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemW3CClearKey(config) {\n    let instance;\n    const BASE64 = config.BASE64;\n    const logger = config.debug.getLogger(instance);\n    /**\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\n     *\n     * @param {ProtectionDataSet} protectionData the protection data\n     * @param {ArrayBuffer} message the ClearKey CDM message\n     * @returns {ClearKeyKeySet} the key set or null if none found\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\n     * protection data\n     * @memberof KeySystemClearKey\n     */\n    function getClearKeysFromProtectionData(protectionData, message) {\n        let clearkeySet = null;\n        if (protectionData) {\n            // ClearKey is the only system that does not require a license server URL, so we\n            // handle it here when keys are specified in protection data\n            const jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\n            const keyPairs = [];\n            for (let i = 0; i < jsonMsg.kids.length; i++) {\n                const clearkeyID = jsonMsg.kids[i];\n                const clearkey = (protectionData.clearkeys && protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\n                if (!clearkey) {\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\n                }\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\n            }\n            clearkeySet = new ClearKeyKeySet(keyPairs);\n\n            logger.warn('ClearKey schemeIdURI is using W3C Common PSSH systemID (1077efec-c0b2-4d02-ace3-3c1e52e2fb4b) in Content Protection. See DASH-IF IOP v4.1 section 7.6.2.4');\n        }\n        return clearkeySet;\n    }\n\n    function getInitData(cp) {\n        return CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\n    }\n\n    function getRequestHeadersFromMessage(/*message*/) {\n        return null;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return new Uint8Array(message);\n    }\n\n    function getLicenseServerURLFromInitData(/*initData*/) {\n        return null;\n    }\n\n    function getCDMData() {\n        return null;\n    }\n\n    function getSessionId(/*cp*/) {\n        return null;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n        getCDMData: getCDMData,\n        getSessionId: getSessionId,\n        getClearKeysFromProtectionData: getClearKeysFromProtectionData\n    };\n\n    return instance;\n}\n\nKeySystemW3CClearKey.__dashjs_factory_name = 'KeySystemW3CClearKey';\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemW3CClearKey); /* jshint ignore:line */\n\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Google Widevine DRM\n *\n * @class\n * @implements MediaPlayer.dependencies.protection.KeySystem\n */\n\nimport CommonEncryption from '../CommonEncryption';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nconst uuid = 'edef8ba9-79d6-4ace-a3c8-27dcd51d21ed';\nconst systemString = ProtectionConstants.WIDEVINE_KEYSTEM_STRING;\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemWidevine(config) {\n\n    config = config || {};\n    let instance;\n    let protData = null;\n    const BASE64 = config.BASE64;\n\n    function init(protectionData) {\n        if (protectionData) {\n            protData = protectionData;\n        }\n    }\n\n    function getInitData(cp) {\n        return CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\n    }\n\n    function getRequestHeadersFromMessage( /*message*/ ) {\n        return null;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return new Uint8Array(message);\n    }\n\n    function getLicenseServerURLFromInitData( /*initData*/ ) {\n        return null;\n    }\n\n    function getCDMData() {\n        return null;\n    }\n\n    function getSessionId(cp) {\n        // Get sessionId from protectionData or from manifest\n        if (protData && protData.sessionId) {\n            return protData.sessionId;\n        } else if (cp && cp.sessionId) {\n            return cp.sessionId;\n        }\n        return null;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        init: init,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n        getCDMData: getCDMData,\n        getSessionId: getSessionId\n    };\n\n    return instance;\n}\n\nKeySystemWidevine.__dashjs_factory_name = 'KeySystemWidevine';\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemWidevine); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ErrorsBase from '../../../core/errors/ErrorsBase';\n/**\n * @class\n */\nclass ProtectionErrors extends ErrorsBase {\n\tconstructor () {\n        super();\n\n        /**\n         *  Generid key Error code\n         */\n        this.MEDIA_KEYERR_CODE = 100;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_UNKNOWN_CODE = 101;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_CLIENT_CODE = 102;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_SERVICE_CODE = 103;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_OUTPUT_CODE = 104;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_HARDWARECHANGE_CODE = 105;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_DOMAIN_CODE = 106;\n\n        /**\n         *  Error code returned when an error occured in keymessage event for ProtectionModel_01b\n         */\n        this.MEDIA_KEY_MESSAGE_ERROR_CODE = 107;\n        /**\n         *  Error code returned when challenge is invalid in keymessage event (event triggered by CDM)\n         */\n        this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE = 108;\n        /**\n         *  Error code returned when License server certificate has not been successfully updated\n         */\n        this.SERVER_CERTIFICATE_UPDATED_ERROR_CODE = 109;\n        /**\n         *  Error code returned when license validity has expired\n         */\n        this.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE = 110;\n        /**\n         *  Error code returned when no licenser url is defined\n         */\n        this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE = 111;\n        /**\n         *  Error code returned when key system access is denied\n         */\n        this.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE = 112;\n        /**\n         *  Error code returned when key session has not been successfully created\n         */\n        this.KEY_SESSION_CREATED_ERROR_CODE = 113;\n        /**\n         *  Error code returned when license request failed after a keymessage event has been triggered\n         */\n        this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE = 114;\n\n        this.MEDIA_KEYERR_UNKNOWN_MESSAGE = 'An unspecified error occurred. This value is used for errors that don\\'t match any of the other codes.';\n        this.MEDIA_KEYERR_CLIENT_MESSAGE = 'The Key System could not be installed or updated.';\n        this.MEDIA_KEYERR_SERVICE_MESSAGE = 'The message passed into update indicated an error from the license service.';\n        this.MEDIA_KEYERR_OUTPUT_MESSAGE = 'There is no available output device with the required characteristics for the content protection system.';\n        this.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE = 'A hardware configuration change caused a content protection error.';\n        this.MEDIA_KEYERR_DOMAIN_MESSAGE = 'An error occurred in a multi-device domain licensing configuration. The most common error is a failure to join the domain.';\n        this.MEDIA_KEY_MESSAGE_ERROR_MESSAGE = 'Multiple key sessions were creates with a user-agent that does not support sessionIDs!! Unpredictable behavior ahead!';\n        this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE = 'DRM: Empty key message from CDM';\n        this.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE = 'Error updating server certificate -- ';\n        this.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE = 'DRM: KeyStatusChange error! -- License has expired';\n        this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE = 'DRM: No license server URL specified!';\n        this.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE = 'DRM: KeySystem Access Denied! -- ';\n        this.KEY_SESSION_CREATED_ERROR_MESSAGE = 'DRM: unable to create session! --';\n        this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE = 'DRM: licenser error! --';\n    }\n}\n\nlet protectionErrors = new ProtectionErrors();\nexport default protectionErrors;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Initial implementation of EME\n *\n * Implemented by Google Chrome prior to v36\n *\n * @implements ProtectionModel\n * @class\n */\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport DashJSError from '../../vo/DashJSError';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\nimport KeySystemAccess from '../vo/KeySystemAccess';\nimport ProtectionErrors from '../errors/ProtectionErrors';\n\nfunction ProtectionModel_01b(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    const events = config.events;\n    const debug = config.debug;\n    const api = config.api;\n    const errHandler = config.errHandler;\n\n    let instance,\n        logger,\n        videoElement,\n        keySystem,\n        protectionKeyController,\n\n        // With this version of the EME APIs, sessionIDs are not assigned to\n        // sessions until the first key message is received.  We are assuming\n        // that in the case of multiple sessions, key messages will be received\n        // in the order that generateKeyRequest() is called.\n        // Holding spot for newly-created sessions until we determine whether or\n        // not the CDM supports sessionIDs\n        pendingSessions,\n\n        // List of sessions that have been initialized.  Only the first position will\n        // be used in the case that the CDM does not support sessionIDs\n        sessions,\n\n        // Not all CDMs support the notion of sessionIDs.  Without sessionIDs\n        // there is no way for us to differentiate between sessions, therefore\n        // we must only allow a single session.  Once we receive the first key\n        // message we can set this flag to determine if more sessions are allowed\n        moreSessionsAllowed,\n\n        // This is our main event handler for all desired HTMLMediaElement events\n        // related to EME.  These events are translated into our API-independent\n        // versions of the same events\n        eventHandler;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        videoElement = null;\n        keySystem = null;\n        pendingSessions = [];\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        if (videoElement) {\n            removeEventListeners();\n        }\n        for (let i = 0; i < sessions.length; i++) {\n            closeKeySession(sessions[i]);\n        }\n        eventBus.trigger(events.TEARDOWN_COMPLETE);\n    }\n\n    function getKeySystem() {\n        return keySystem;\n    }\n\n    function getAllInitData() {\n        const retVal = [];\n        for (let i = 0; i < pendingSessions.length; i++) {\n            retVal.push(pendingSessions[i].initData);\n        }\n        for (let i = 0; i < sessions.length; i++) {\n            retVal.push(sessions[i].initData);\n        }\n        return retVal;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n        let ve = videoElement;\n        if (!ve) { // Must have a video element to do this capability tests\n            ve = document.createElement('video');\n        }\n\n        // Try key systems in order, first one with supported key system configuration\n        // is used\n        let found = false;\n        for (let ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\n            const systemString = ksConfigurations[ksIdx].ks.systemString;\n            const configs = ksConfigurations[ksIdx].configs;\n            let supportedAudio = null;\n            let supportedVideo = null;\n\n            // Try key system configs in order, first one with supported audio/video\n            // is used\n            for (let configIdx = 0; configIdx < configs.length; configIdx++) {\n                //let audios = configs[configIdx].audioCapabilities;\n                const videos = configs[configIdx].videoCapabilities;\n                // Look for supported video container/codecs\n                if (videos && videos.length !== 0) {\n                    supportedVideo = []; // Indicates that we have a requested video config\n                    for (let videoIdx = 0; videoIdx < videos.length; videoIdx++) {\n                        if (ve.canPlayType(videos[videoIdx].contentType, systemString) !== '') {\n                            supportedVideo.push(videos[videoIdx]);\n                        }\n                    }\n                }\n\n                // No supported audio or video in this configuration OR we have\n                // requested audio or video configuration that is not supported\n                if ((!supportedAudio && !supportedVideo) ||\n                    (supportedAudio && supportedAudio.length === 0) ||\n                    (supportedVideo && supportedVideo.length === 0)) {\n                    continue;\n                }\n\n                // This configuration is supported\n                found = true;\n                const ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\n                const ks = protectionKeyController.getKeySystemBySystemString(systemString);\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { data: new KeySystemAccess(ks, ksConfig) });\n                break;\n            }\n        }\n        if (!found) {\n            eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: 'Key system access denied! -- No valid audio/video content configurations detected!' });\n        }\n    }\n\n    function selectKeySystem(keySystemAccess) {\n        keySystem = keySystemAccess.keySystem;\n        eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED);\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement) {\n            return;\n        }\n\n        // Replacing the previous element\n        if (videoElement) {\n            removeEventListeners();\n\n            // Close any open sessions - avoids memory leak on LG webOS 2016/2017 TVs\n            for (var i = 0; i < sessions.length; i++) {\n                closeKeySession(sessions[i]);\n            }\n            sessions = [];\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener(api.keyerror, eventHandler);\n            videoElement.addEventListener(api.needkey, eventHandler);\n            videoElement.addEventListener(api.keymessage, eventHandler);\n            videoElement.addEventListener(api.keyadded, eventHandler);\n            eventBus.trigger(events.VIDEO_ELEMENT_SELECTED);\n        }\n    }\n\n    function createKeySession(initData /*, protData, keySystemType */) {\n        if (!keySystem) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        // Determine if creating a new session is allowed\n        if (moreSessionsAllowed || sessions.length === 0) {\n            const newSession = { // Implements SessionToken\n                sessionID: null,\n                initData: initData,\n                getSessionID: function () {\n                    return this.sessionID;\n                },\n\n                getExpirationTime: function () {\n                    return NaN;\n                },\n\n                getSessionType: function () {\n                    return 'temporary';\n                }\n            };\n            pendingSessions.push(newSession);\n\n            // Send our request to the CDM\n            videoElement[api.generateKeyRequest](keySystem.systemString, new Uint8Array(initData));\n\n            return newSession;\n\n        } else {\n            throw new Error('Multiple sessions not allowed!');\n        }\n\n    }\n\n    function updateKeySession(sessionToken, message) {\n        const sessionID = sessionToken.sessionID;\n        if (!protectionKeyController.isClearKey(keySystem)) {\n            // Send our request to the CDM\n            videoElement[api.addKey](keySystem.systemString,\n                new Uint8Array(message), new Uint8Array(sessionToken.initData), sessionID);\n        } else {\n            // For clearkey, message is a ClearKeyKeySet\n            for (let i = 0; i < message.keyPairs.length; i++) {\n                videoElement[api.addKey](keySystem.systemString,\n                    message.keyPairs[i].key, message.keyPairs[i].keyID, sessionID);\n            }\n        }\n        eventBus.trigger(events.KEY_SESSION_UPDATED);\n    }\n\n    function closeKeySession(sessionToken) {\n        // Send our request to the CDM\n        try {\n            videoElement[api.cancelKeyRequest](keySystem.systemString, sessionToken.sessionID);\n        } catch (error) {\n            eventBus.trigger(events.KEY_SESSION_CLOSED, { data: null, error: 'Error closing session (' + sessionToken.sessionID + ') ' + error.message });\n        }\n    }\n\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */ }\n    function loadKeySession(/*sessionID*/) { /* Not supported */ }\n    function removeKeySession(/*sessionToken*/) { /* Not supported */ }\n\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                let sessionToken = null;\n                switch (event.type) {\n                    case api.needkey:\n                        let initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                        eventBus.trigger(events.NEED_KEY, { key: new NeedKey(initData, 'cenc') });\n                        break;\n\n                    case api.keyerror:\n                        sessionToken = findSessionByID(sessions, event.sessionId);\n                        if (!sessionToken) {\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\n                        }\n\n                        if (sessionToken) {\n                            let code = ProtectionErrors.MEDIA_KEYERR_CODE;\n                            let msg = '';\n                            switch (event.errorCode.code) {\n                                case 1:\n                                    code = ProtectionErrors.MEDIA_KEYERR_UNKNOWN_CODE;\n                                    msg += 'MEDIA_KEYERR_UNKNOWN - ' + ProtectionErrors.MEDIA_KEYERR_UNKNOWN_MESSAGE;\n                                    break;\n                                case 2:\n                                    code = ProtectionErrors.MEDIA_KEYERR_CLIENT_CODE;\n                                    msg += 'MEDIA_KEYERR_CLIENT - ' + ProtectionErrors.MEDIA_KEYERR_CLIENT_MESSAGE;\n                                    break;\n                                case 3:\n                                    code = ProtectionErrors.MEDIA_KEYERR_SERVICE_CODE;\n                                    msg += 'MEDIA_KEYERR_SERVICE - ' + ProtectionErrors.MEDIA_KEYERR_SERVICE_MESSAGE;\n                                    break;\n                                case 4:\n                                    code = ProtectionErrors.MEDIA_KEYERR_OUTPUT_CODE;\n                                    msg += 'MEDIA_KEYERR_OUTPUT - ' + ProtectionErrors.MEDIA_KEYERR_OUTPUT_MESSAGE;\n                                    break;\n                                case 5:\n                                    code = ProtectionErrors.MEDIA_KEYERR_HARDWARECHANGE_CODE;\n                                    msg += 'MEDIA_KEYERR_HARDWARECHANGE - ' + ProtectionErrors.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE;\n                                    break;\n                                case 6:\n                                    code = ProtectionErrors.MEDIA_KEYERR_DOMAIN_CODE;\n                                    msg += 'MEDIA_KEYERR_DOMAIN - ' + ProtectionErrors.MEDIA_KEYERR_DOMAIN_MESSAGE;\n                                    break;\n                            }\n                            msg += '  System Code = ' + event.systemCode;\n                            // TODO: Build error string based on key error\n                            eventBus.trigger(events.KEY_ERROR, { error: new DashJSError(code, msg, sessionToken) });\n                        } else {\n                            logger.error('No session token found for key error');\n                        }\n                        break;\n\n                    case api.keyadded:\n                        sessionToken = findSessionByID(sessions, event.sessionId);\n                        if (!sessionToken) {\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\n                        }\n\n                        if (sessionToken) {\n                            logger.debug('DRM: Key added.');\n                            eventBus.trigger(events.KEY_ADDED, { data: sessionToken });//TODO not sure anything is using sessionToken? why there?\n                        } else {\n                            logger.debug('No session token found for key added');\n                        }\n                        break;\n\n                    case api.keymessage:\n                        // If this CDM does not support session IDs, we will be limited\n                        // to a single session\n                        moreSessionsAllowed = (event.sessionId !== null) && (event.sessionId !== undefined);\n\n                        // SessionIDs supported\n                        if (moreSessionsAllowed) {\n                            // Attempt to find an uninitialized token with this sessionID\n                            sessionToken = findSessionByID(sessions, event.sessionId);\n                            if (!sessionToken && pendingSessions.length > 0) {\n\n                                // This is the first message for our latest session, so set the\n                                // sessionID and add it to our list\n                                sessionToken = pendingSessions.shift();\n                                sessions.push(sessionToken);\n                                sessionToken.sessionID = event.sessionId;\n\n                                eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\n                            }\n                        } else if (pendingSessions.length > 0) { // SessionIDs not supported\n                            sessionToken = pendingSessions.shift();\n                            sessions.push(sessionToken);\n\n                            if (pendingSessions.length !== 0) {\n                                errHandler.error(new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_ERROR_CODE, ProtectionErrors.MEDIA_KEY_MESSAGE_ERROR_MESSAGE));\n                            }\n                        }\n\n                        if (sessionToken) {\n                            let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n\n                            // For ClearKey, the spec mandates that you pass this message to the\n                            // addKey method, so we always save it to the token since there is no\n                            // way to tell which key system is in use\n                            sessionToken.keyMessage = message;\n                            eventBus.trigger(events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(sessionToken, message, event.defaultURL) });\n\n                        } else {\n                            logger.warn('No session token found for key message');\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n\n    /**\n     * Helper function to retrieve the stored session token based on a given\n     * sessionID value\n     *\n     * @param {Array} sessionArray - the array of sessions to search\n     * @param {*} sessionID - the sessionID to search for\n     * @returns {*} the session token with the given sessionID\n     */\n    function findSessionByID(sessionArray, sessionID) {\n        if (!sessionID || !sessionArray) {\n            return null;\n        } else {\n            const len = sessionArray.length;\n            for (let i = 0; i < len; i++) {\n                if (sessionArray[i].sessionID == sessionID) {\n                    return sessionArray[i];\n                }\n            }\n            return null;\n        }\n    }\n\n    function removeEventListeners() {\n        videoElement.removeEventListener(api.keyerror, eventHandler);\n        videoElement.removeEventListener(api.needkey, eventHandler);\n        videoElement.removeEventListener(api.keymessage, eventHandler);\n        videoElement.removeEventListener(api.keyadded, eventHandler);\n    }\n\n    instance = {\n        getAllInitData: getAllInitData,\n        requestKeySystemAccess: requestKeySystemAccess,\n        getKeySystem: getKeySystem,\n        selectKeySystem: selectKeySystem,\n        setMediaElement: setMediaElement,\n        createKeySession: createKeySession,\n        updateKeySession: updateKeySession,\n        closeKeySession: closeKeySession,\n        setServerCertificate: setServerCertificate,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        stop: reset,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_01b.__dashjs_factory_name = 'ProtectionModel_01b';\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_01b); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Most recent EME implementation\n *\n * Implemented by Google Chrome v36+ (Windows, OSX, Linux)\n *\n * @implements ProtectionModel\n * @class\n */\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport ProtectionErrors from '../errors/ProtectionErrors';\nimport DashJSError from '../../vo/DashJSError';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemAccess from '../vo/KeySystemAccess';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nfunction ProtectionModel_21Jan2015(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    const events = config.events;\n    const debug = config.debug;\n\n    let instance,\n        logger,\n        keySystem,\n        videoElement,\n        mediaKeys,\n        sessions,\n        eventHandler,\n        protectionKeyController;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        keySystem = null;\n        videoElement = null;\n        mediaKeys = null;\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        const numSessions = sessions.length;\n        let session;\n\n        if (numSessions !== 0) {\n            // Called when we are done closing a session.  Success or fail\n            const done = function (session) {\n                removeSession(session);\n                if (sessions.length === 0) {\n                    if (videoElement) {\n                        videoElement.removeEventListener('encrypted', eventHandler);\n                        videoElement.setMediaKeys(null).then(function () {\n                            eventBus.trigger(events.TEARDOWN_COMPLETE);\n                        });\n                    } else {\n                        eventBus.trigger(events.TEARDOWN_COMPLETE);\n                    }\n                }\n            };\n            for (let i = 0; i < numSessions; i++) {\n                session = sessions[i];\n                (function (s) {\n                    // Override closed promise resolver\n                    session.session.closed.then(function () {\n                        done(s);\n                    });\n                    // Close the session and handle errors, otherwise promise\n                    // resolver above will be called\n                    closeKeySessionInternal(session).catch(function () {\n                        done(s);\n                    });\n\n                })(session);\n            }\n        } else {\n            eventBus.trigger(events.TEARDOWN_COMPLETE);\n        }\n    }\n\n    function stop() {\n        // Close and remove not usable sessions\n        let session;\n        for (let i = 0; i < sessions.length; i++) {\n            session = sessions[i];\n            if (!session.getUsable()) {\n                closeKeySessionInternal(session).catch(function () {\n                    removeSession(session);\n                });\n            }\n        }\n    }\n\n    function getKeySystem() {\n        return keySystem;\n    }\n\n    function getAllInitData() {\n        const retVal = [];\n        for (let i = 0; i < sessions.length; i++) {\n            if (sessions[i].initData) {\n                retVal.push(sessions[i].initData);\n            }\n        }\n        return retVal;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n        requestKeySystemAccessInternal(ksConfigurations, 0);\n    }\n\n    function selectKeySystem(keySystemAccess) {\n        keySystemAccess.mksa.createMediaKeys().then(function (mkeys) {\n            keySystem = keySystemAccess.keySystem;\n            mediaKeys = mkeys;\n            if (videoElement) {\n                videoElement.setMediaKeys(mediaKeys).then(function () {\n                    eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED);\n                });\n            } else {\n                eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED);\n            }\n\n        }).catch(function () {\n            eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED, { error: 'Error selecting keys system (' + keySystemAccess.keySystem.systemString + ')! Could not create MediaKeys -- TODO' });\n        });\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement)\n            return;\n\n        // Replacing the previous element\n        if (videoElement) {\n            videoElement.removeEventListener('encrypted', eventHandler);\n            if (videoElement.setMediaKeys) {\n                videoElement.setMediaKeys(null);\n            }\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener('encrypted', eventHandler);\n            if (videoElement.setMediaKeys && mediaKeys) {\n                videoElement.setMediaKeys(mediaKeys);\n            }\n        }\n    }\n\n    function setServerCertificate(serverCertificate) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not set server certificate until you have selected a key system');\n        }\n        mediaKeys.setServerCertificate(serverCertificate).then(function () {\n            logger.info('DRM: License server certificate successfully updated.');\n            eventBus.trigger(events.SERVER_CERTIFICATE_UPDATED);\n        }).catch(function (error) {\n            eventBus.trigger(events.SERVER_CERTIFICATE_UPDATED, { error: new DashJSError(ProtectionErrors.SERVER_CERTIFICATE_UPDATED_ERROR_CODE, ProtectionErrors.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE + error.name) });\n        });\n    }\n\n    function createKeySession(initData, protData, sessionType) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        const session = mediaKeys.createSession(sessionType);\n        const sessionToken = createSessionToken(session, initData, sessionType);\n        const ks = this.getKeySystem();\n\n        // Generate initial key request.\n        // keyids type is used for clearkey when keys are provided directly in the protection data and then request to a license server is not needed\n        const dataType = ks.systemString === ProtectionConstants.CLEARKEY_KEYSTEM_STRING && (initData || (protData && protData.clearkeys)) ? 'keyids' : 'cenc';\n        session.generateRequest(dataType, initData).then(function () {\n            logger.debug('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\n            eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\n        }).catch(function (error) {\n            // TODO: Better error string\n            removeSession(sessionToken);\n            eventBus.trigger(events.KEY_SESSION_CREATED, {\n                data: null,\n                error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Error generating key request -- ' + error.name)\n            });\n        });\n    }\n\n    function updateKeySession(sessionToken, message) {\n        const session = sessionToken.session;\n\n        // Send our request to the key session\n        if (protectionKeyController.isClearKey(keySystem)) {\n            message = message.toJWK();\n        }\n        session.update(message)\n            .then(() => {\n                eventBus.trigger(events.KEY_SESSION_UPDATED);\n            })\n            .catch(function (error) {\n                eventBus.trigger(events.KEY_ERROR, {error: new DashJSError(ProtectionErrors.MEDIA_KEYERR_CODE, 'Error sending update() message! ' + error.name, sessionToken)});\n            });\n    }\n\n    function loadKeySession(sessionID, initData, sessionType) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not load sessions until you have selected a key system');\n        }\n\n        // Check if session Id is not already loaded or loading\n        for (let i = 0; i < sessions.length; i++) {\n            if (sessionID === sessions[i].sessionId) {\n                logger.warn('DRM: Ignoring session ID because we have already seen it!');\n                return;\n            }\n        }\n\n        const session = mediaKeys.createSession(sessionType);\n        const sessionToken = createSessionToken(session, initData, sessionType, sessionID);\n\n        // Load persisted session data into our newly created session object\n        session.load(sessionID).then(function (success) {\n            if (success) {\n                logger.debug('DRM: Session loaded.  SessionID = ' + sessionToken.getSessionID());\n                eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\n            } else {\n                removeSession(sessionToken);\n                eventBus.trigger(events.KEY_SESSION_CREATED, {\n                    data: null,\n                    error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Could not load session! Invalid Session ID (' + sessionID + ')')\n                });\n            }\n        }).catch(function (error) {\n            removeSession(sessionToken);\n            eventBus.trigger(events.KEY_SESSION_CREATED, {\n                data: null,\n                error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Could not load session (' + sessionID + ')! ' + error.name)\n            });\n        });\n    }\n\n    function removeKeySession(sessionToken) {\n        const session = sessionToken.session;\n\n        session.remove().then(function () {\n            logger.debug('DRM: Session removed.  SessionID = ' + sessionToken.getSessionID());\n            eventBus.trigger(events.KEY_SESSION_REMOVED, { data: sessionToken.getSessionID() });\n        }, function (error) {\n            eventBus.trigger(events.KEY_SESSION_REMOVED, {\n                data: null,\n                error: 'Error removing session (' + sessionToken.getSessionID() + '). ' + error.name\n            });\n\n        });\n    }\n\n    function closeKeySession(sessionToken) {\n        // Send our request to the key session\n        closeKeySessionInternal(sessionToken).catch(function (error) {\n            removeSession(sessionToken);\n            eventBus.trigger(events.KEY_SESSION_CLOSED, {\n                data: null,\n                error: 'Error closing session (' + sessionToken.getSessionID() + ') ' + error.name\n            });\n        });\n    }\n\n    function requestKeySystemAccessInternal(ksConfigurations, idx) {\n\n        if (navigator.requestMediaKeySystemAccess === undefined ||\n            typeof navigator.requestMediaKeySystemAccess !== 'function') {\n            eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: 'Insecure origins are not allowed' });\n            return;\n        }\n\n        (function (i) {\n            const keySystem = ksConfigurations[i].ks;\n            const configs = ksConfigurations[i].configs;\n            let systemString = keySystem.systemString;\n\n            // PATCH to support persistent licenses on Edge browser (see issue #2658)\n            if (systemString === ProtectionConstants.PLAYREADY_KEYSTEM_STRING && configs[0].persistentState === 'required') {\n                systemString += '.recommendation';\n            }\n\n            navigator.requestMediaKeySystemAccess(systemString, configs).then(function (mediaKeySystemAccess) {\n                // Chrome 40 does not currently implement MediaKeySystemAccess.getConfiguration()\n                const configuration = (typeof mediaKeySystemAccess.getConfiguration === 'function') ?\n                    mediaKeySystemAccess.getConfiguration() : null;\n                const keySystemAccess = new KeySystemAccess(keySystem, configuration);\n                keySystemAccess.mksa = mediaKeySystemAccess;\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { data: keySystemAccess });\n\n            }).catch(function (error) {\n                if (++i < ksConfigurations.length) {\n                    requestKeySystemAccessInternal(ksConfigurations, i);\n                } else {\n                    eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: 'Key system access denied! ' + error.message });\n                }\n            });\n        })(idx);\n    }\n\n    function closeKeySessionInternal(sessionToken) {\n        const session = sessionToken.session;\n\n        // Remove event listeners\n        session.removeEventListener('keystatuseschange', sessionToken);\n        session.removeEventListener('message', sessionToken);\n\n        // Send our request to the key session\n        return session.close();\n    }\n\n    // This is our main event handler for all desired HTMLMediaElement events\n    // related to EME.  These events are translated into our API-independent\n    // versions of the same events\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                switch (event.type) {\n                    case 'encrypted':\n                        if (event.initData) {\n                            let initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                            eventBus.trigger(events.NEED_KEY, { key: new NeedKey(initData, event.initDataType) });\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n    function removeSession(token) {\n        // Remove from our session list\n        for (let i = 0; i < sessions.length; i++) {\n            if (sessions[i] === token) {\n                sessions.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    function parseKeyStatus(args) {\n        // Edge and Chrome implement different version of keystatues, param are not on same order\n        let status, keyId;\n        if (args && args.length > 0) {\n            if (args[0]) {\n                if (typeof args[0] === 'string') {\n                    status = args[0];\n                } else {\n                    keyId = args[0];\n                }\n            }\n\n            if (args[1]) {\n                if (typeof args[1] === 'string') {\n                    status = args[1];\n                } else {\n                    keyId = args[1];\n                }\n            }\n        }\n        return {\n            status: status,\n            keyId: keyId\n        };\n    }\n\n    // Function to create our session token objects which manage the EME\n    // MediaKeySession and session-specific event handler\n    function createSessionToken(session, initData, sessionType, sessionID) {\n        const token = { // Implements SessionToken\n            session: session,\n            initData: initData,\n            sessionId: sessionID,\n\n            // This is our main event handler for all desired MediaKeySession events\n            // These events are translated into our API-independent versions of the\n            // same events\n            handleEvent: function (event) {\n                switch (event.type) {\n                    case 'keystatuseschange':\n                        eventBus.trigger(events.KEY_STATUSES_CHANGED, { data: this });\n                        event.target.keyStatuses.forEach(function () {\n                            let keyStatus = parseKeyStatus(arguments);\n                            switch (keyStatus.status) {\n                                case 'expired':\n                                    eventBus.trigger(events.INTERNAL_KEY_STATUS_CHANGED, { error: new DashJSError(ProtectionErrors.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE, ProtectionErrors.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE) });\n                                    break;\n                                default:\n                                    eventBus.trigger(events.INTERNAL_KEY_STATUS_CHANGED, keyStatus);\n                                    break;\n                            }\n                        });\n                        break;\n\n                    case 'message':\n                        let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n                        eventBus.trigger(events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(this, message, undefined, event.messageType) });\n                        break;\n                }\n            },\n\n            getSessionID: function () {\n                return session.sessionId;\n            },\n\n            getExpirationTime: function () {\n                return session.expiration;\n            },\n\n            getKeyStatuses: function () {\n                return session.keyStatuses;\n            },\n\n            getUsable: function () {\n                let usable = false;\n                session.keyStatuses.forEach(function () {\n                    let keyStatus = parseKeyStatus(arguments);\n                    if (keyStatus.status === 'usable') {\n                        usable = true;\n                    }\n                });\n                return usable;\n            },\n\n            getSessionType: function () {\n                return sessionType;\n            }\n        };\n\n        // Add all event listeners\n        session.addEventListener('keystatuseschange', token);\n        session.addEventListener('message', token);\n\n        // Register callback for session closed Promise\n        session.closed.then(function () {\n            removeSession(token);\n            logger.debug('DRM: Session closed.  SessionID = ' + token.getSessionID());\n            eventBus.trigger(events.KEY_SESSION_CLOSED, { data: token.getSessionID() });\n        });\n\n        // Add to our session list\n        sessions.push(token);\n\n        return token;\n    }\n\n    instance = {\n        getAllInitData: getAllInitData,\n        requestKeySystemAccess: requestKeySystemAccess,\n        getKeySystem: getKeySystem,\n        selectKeySystem: selectKeySystem,\n        setMediaElement: setMediaElement,\n        setServerCertificate: setServerCertificate,\n        createKeySession: createKeySession,\n        updateKeySession: updateKeySession,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        closeKeySession: closeKeySession,\n        stop: stop,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_21Jan2015.__dashjs_factory_name = 'ProtectionModel_21Jan2015';\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_21Jan2015); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Implementation of the EME APIs as of the 3 Feb 2014 state of the specification.\n *\n * Implemented by Internet Explorer 11 (Windows 8.1)\n *\n * @implements ProtectionModel\n * @class\n */\n\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport DashJSError from '../../vo/DashJSError';\nimport ProtectionErrors from '../errors/ProtectionErrors';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\nimport KeySystemAccess from '../vo/KeySystemAccess';\n\nfunction ProtectionModel_3Feb2014(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    const events = config.events;\n    const debug = config.debug;\n    const api = config.api;\n\n    let instance,\n        logger,\n        videoElement,\n        keySystem,\n        mediaKeys,\n        keySystemAccess,\n        sessions,\n        eventHandler,\n        protectionKeyController;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        videoElement = null;\n        keySystem = null;\n        mediaKeys = null;\n        keySystemAccess = null;\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        try {\n            for (let i = 0; i < sessions.length; i++) {\n                closeKeySession(sessions[i]);\n            }\n            if (videoElement) {\n                videoElement.removeEventListener(api.needkey, eventHandler);\n            }\n            eventBus.trigger(events.TEARDOWN_COMPLETE);\n        } catch (error) {\n            eventBus.trigger(events.TEARDOWN_COMPLETE, { error: 'Error tearing down key sessions and MediaKeys! -- ' + error.message });\n        }\n    }\n\n    function getKeySystem() {\n        return keySystem;\n    }\n\n    function getAllInitData() {\n        const retVal = [];\n        for (let i = 0; i < sessions.length; i++) {\n            retVal.push(sessions[i].initData);\n        }\n        return retVal;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n\n        // Try key systems in order, first one with supported key system configuration\n        // is used\n        let found = false;\n        for (let ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\n            const systemString = ksConfigurations[ksIdx].ks.systemString;\n            const configs = ksConfigurations[ksIdx].configs;\n            let supportedAudio = null;\n            let supportedVideo = null;\n\n            // Try key system configs in order, first one with supported audio/video\n            // is used\n            for (let configIdx = 0; configIdx < configs.length; configIdx++) {\n                const audios = configs[configIdx].audioCapabilities;\n                const videos = configs[configIdx].videoCapabilities;\n\n                // Look for supported audio container/codecs\n                if (audios && audios.length !== 0) {\n                    supportedAudio = []; // Indicates that we have a requested audio config\n                    for (let audioIdx = 0; audioIdx < audios.length; audioIdx++) {\n                        if (window[api.MediaKeys].isTypeSupported(systemString, audios[audioIdx].contentType)) {\n                            supportedAudio.push(audios[audioIdx]);\n                        }\n                    }\n                }\n\n                // Look for supported video container/codecs\n                if (videos && videos.length !== 0) {\n                    supportedVideo = []; // Indicates that we have a requested video config\n                    for (let videoIdx = 0; videoIdx < videos.length; videoIdx++) {\n                        if (window[api.MediaKeys].isTypeSupported(systemString, videos[videoIdx].contentType)) {\n                            supportedVideo.push(videos[videoIdx]);\n                        }\n                    }\n                }\n\n                // No supported audio or video in this configuration OR we have\n                // requested audio or video configuration that is not supported\n                if ((!supportedAudio && !supportedVideo) ||\n                    (supportedAudio && supportedAudio.length === 0) ||\n                    (supportedVideo && supportedVideo.length === 0)) {\n                    continue;\n                }\n\n                // This configuration is supported\n                found = true;\n                const ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\n                const ks = protectionKeyController.getKeySystemBySystemString(systemString);\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { data: new KeySystemAccess(ks, ksConfig) });\n                break;\n            }\n        }\n        if (!found) {\n            eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: 'Key system access denied! -- No valid audio/video content configurations detected!' });\n        }\n    }\n\n    function selectKeySystem(ksAccess) {\n        try {\n            mediaKeys = ksAccess.mediaKeys = new window[api.MediaKeys](ksAccess.keySystem.systemString);\n            keySystem = ksAccess.keySystem;\n            keySystemAccess = ksAccess;\n            if (videoElement) {\n                setMediaKeys();\n            }\n            eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED);\n        } catch (error) {\n            eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED, { error: 'Error selecting keys system (' + keySystem.systemString + ')! Could not create MediaKeys -- TODO' });\n        }\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement)\n            return;\n\n        // Replacing the previous element\n        if (videoElement) {\n            videoElement.removeEventListener(api.needkey, eventHandler);\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener(api.needkey, eventHandler);\n            if (mediaKeys) {\n                setMediaKeys();\n            }\n        }\n    }\n\n    function createKeySession(initData, protData, sessionType, cdmData) {\n        if (!keySystem || !mediaKeys || !keySystemAccess) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        // Use the first video capability for the contentType.\n        // TODO:  Not sure if there is a way to concatenate all capability data into a RFC6386-compatible format\n\n        // If player is trying to playback Audio only stream - don't error out.\n        let capabilities = null;\n\n        if (keySystemAccess.ksConfiguration.videoCapabilities && keySystemAccess.ksConfiguration.videoCapabilities.length > 0) {\n            capabilities = keySystemAccess.ksConfiguration.videoCapabilities[0];\n        }\n\n        if (capabilities === null && keySystemAccess.ksConfiguration.audioCapabilities && keySystemAccess.ksConfiguration.audioCapabilities.length > 0) {\n            capabilities = keySystemAccess.ksConfiguration.audioCapabilities[0];\n        }\n\n        if (capabilities === null) {\n            throw new Error('Can not create sessions for unknown content types.');\n        }\n\n        const contentType = capabilities.contentType;\n        const session = mediaKeys.createSession(contentType, new Uint8Array(initData), cdmData ? new Uint8Array(cdmData) : null);\n        const sessionToken = createSessionToken(session, initData);\n\n        // Add all event listeners\n        session.addEventListener(api.error, sessionToken);\n        session.addEventListener(api.message, sessionToken);\n        session.addEventListener(api.ready, sessionToken);\n        session.addEventListener(api.close, sessionToken);\n\n        // Add to our session list\n        sessions.push(sessionToken);\n        logger.debug('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\n        eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\n    }\n\n    function updateKeySession(sessionToken, message) {\n        const session = sessionToken.session;\n\n        if (!protectionKeyController.isClearKey(keySystem)) {\n            // Send our request to the key session\n            session.update(new Uint8Array(message));\n        } else {\n            // For clearkey, message is a ClearKeyKeySet\n            session.update(new Uint8Array(message.toJWK()));\n        }\n        eventBus.trigger(events.KEY_SESSION_UPDATED);\n    }\n\n    /**\n     * Close the given session and release all associated keys.  Following\n     * this call, the sessionToken becomes invalid\n     *\n     * @param {Object} sessionToken - the session token\n     */\n    function closeKeySession(sessionToken) {\n        const session = sessionToken.session;\n\n        // Remove event listeners\n        session.removeEventListener(api.error, sessionToken);\n        session.removeEventListener(api.message, sessionToken);\n        session.removeEventListener(api.ready, sessionToken);\n        session.removeEventListener(api.close, sessionToken);\n\n        // Remove from our session list\n        for (let i = 0; i < sessions.length; i++) {\n            if (sessions[i] === sessionToken) {\n                sessions.splice(i, 1);\n                break;\n            }\n        }\n\n        // Send our request to the key session\n        session[api.release]();\n    }\n\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */ }\n    function loadKeySession(/*sessionID*/) { /* Not supported */ }\n    function removeKeySession(/*sessionToken*/) { /* Not supported */ }\n\n\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                switch (event.type) {\n\n                    case api.needkey:\n                        if (event.initData) {\n                            const initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                            eventBus.trigger(events.NEED_KEY, { key: new NeedKey(initData, 'cenc') });\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n\n    // IE11 does not let you set MediaKeys until it has entered a certain\n    // readyState, so we need this logic to ensure we don't set the keys\n    // too early\n    function setMediaKeys() {\n        let boundDoSetKeys = null;\n        const doSetKeys = function () {\n            videoElement.removeEventListener('loadedmetadata', boundDoSetKeys);\n            videoElement[api.setMediaKeys](mediaKeys);\n            eventBus.trigger(events.VIDEO_ELEMENT_SELECTED);\n        };\n        if (videoElement.readyState >= 1) {\n            doSetKeys();\n        } else {\n            boundDoSetKeys = doSetKeys.bind(this);\n            videoElement.addEventListener('loadedmetadata', boundDoSetKeys);\n        }\n\n    }\n\n    // Function to create our session token objects which manage the EME\n    // MediaKeySession and session-specific event handler\n    function createSessionToken(keySession, initData) {\n        return {\n            // Implements SessionToken\n            session: keySession,\n            initData: initData,\n\n            getSessionID: function () {\n                return this.session.sessionId;\n            },\n\n            getExpirationTime: function () {\n                return NaN;\n            },\n\n            getSessionType: function () {\n                return 'temporary';\n            },\n            // This is our main event handler for all desired MediaKeySession events\n            // These events are translated into our API-independent versions of the\n            // same events\n            handleEvent: function (event) {\n                switch (event.type) {\n                    case api.error:\n                        let errorStr = 'KeyError'; // TODO: Make better string from event\n                        eventBus.trigger(events.KEY_ERROR, { error: new DashJSError(ProtectionErrors.MEDIA_KEYERR_CODE, errorStr, this) });\n                        break;\n                    case api.message:\n                        let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n                        eventBus.trigger(events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(this, message, event.destinationURL) });\n                        break;\n                    case api.ready:\n                        logger.debug('DRM: Key added.');\n                        eventBus.trigger(events.KEY_ADDED);\n                        break;\n\n                    case api.close:\n                        logger.debug('DRM: Session closed.  SessionID = ' + this.getSessionID());\n                        eventBus.trigger(events.KEY_SESSION_CLOSED, { data: this.getSessionID() });\n                        break;\n                }\n            }\n        };\n    }\n\n    instance = {\n        getAllInitData: getAllInitData,\n        requestKeySystemAccess: requestKeySystemAccess,\n        getKeySystem: getKeySystem,\n        selectKeySystem: selectKeySystem,\n        setMediaElement: setMediaElement,\n        createKeySession: createKeySession,\n        updateKeySession: updateKeySession,\n        closeKeySession: closeKeySession,\n        setServerCertificate: setServerCertificate,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        stop: reset,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_3Feb2014.__dashjs_factory_name = 'ProtectionModel_3Feb2014';\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_3Feb2014); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * CableLabs ClearKey license server implementation\n *\n * For testing purposes and evaluating potential uses for ClearKey, we have developed\n * a dirt-simple API for requesting ClearKey licenses from a remote server.\n *\n * @implements LicenseServer\n * @class\n */\nimport KeyPair from '../vo/KeyPair';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\n\nfunction ClearKey() {\n\n    let instance;\n\n    function getServerURLFromMessage(url /* message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(/*keySystemStr*/) {\n        return 'json';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        if (!serverResponse.hasOwnProperty('keys')) {\n            return null;\n        }\n        let keyPairs = [];\n        for (let i = 0; i < serverResponse.keys.length; i++) {\n            let keypair = serverResponse.keys[i];\n            let keyid = keypair.kid.replace(/=/g, '');\n            let key = keypair.k.replace(/=/g, '');\n\n            keyPairs.push(new KeyPair(keyid, key));\n        }\n        return new ClearKeyKeySet(keyPairs);\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse\n    };\n\n    return instance;\n}\n\nClearKey.__dashjs_factory_name = 'ClearKey';\nexport default dashjs.FactoryMaker.getSingletonFactory(ClearKey); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * CastLabs DRMToday License Server implementation\n *\n * @implements LicenseServer\n * @class\n */\n\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nfunction DRMToday(config) {\n\n    config = config || {};\n    const BASE64 = config.BASE64;\n\n    const keySystems = {};\n    keySystems[ProtectionConstants.WIDEVINE_KEYSTEM_STRING] = {\n        responseType: 'json',\n        getLicenseMessage: function (response) {\n            return BASE64.decodeArray(response.license);\n        },\n        getErrorResponse: function (response) {\n            return response;\n        }\n    };\n    keySystems[ProtectionConstants.PLAYREADY_KEYSTEM_STRING] = {\n        responseType: 'arraybuffer',\n        getLicenseMessage: function (response) {\n            return response;\n        },\n        getErrorResponse: function (response) {\n            return String.fromCharCode.apply(null, new Uint8Array(response));\n        }\n    };\n\n    let instance;\n\n    function checkConfig() {\n        if (!BASE64 || !BASE64.hasOwnProperty('decodeArray')) {\n            throw new Error('Missing config parameter(s)');\n        }\n    }\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].responseType;\n    }\n\n    function getLicenseMessage(serverResponse, keySystemStr/*, messageType*/) {\n        checkConfig();\n        return keySystems[keySystemStr].getLicenseMessage(serverResponse);\n    }\n\n    function getErrorResponse(serverResponse, keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].getErrorResponse(serverResponse);\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse\n    };\n\n    return instance;\n}\n\nDRMToday.__dashjs_factory_name = 'DRMToday';\nexport default dashjs.FactoryMaker.getSingletonFactory(DRMToday); /* jshint ignore:line */","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global escape: true */\n\n/**\n * Microsoft PlayReady Test License Server\n *\n * For testing content that uses the PlayReady test server at\n *\n * @implements LicenseServer\n * @class\n * @ignore\n */\n\nfunction PlayReady() {\n\n    let instance;\n\n    const soap = 'http://schemas.xmlsoap.org/soap/envelope/';\n\n    function uintToString(arrayBuffer) {\n        const encodedString = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer));\n        const decodedString = decodeURIComponent(escape(encodedString));\n        return decodedString;\n    }\n\n    function parseServerResponse(serverResponse) {\n        if (window.DOMParser) {\n            const stringResponse = uintToString(serverResponse);\n            const parser = new window.DOMParser();\n            const xmlDoc = parser.parseFromString(stringResponse, 'text/xml');\n            const envelope = xmlDoc ? xmlDoc.getElementsByTagNameNS(soap, 'Envelope')[0] : null;\n            const body = envelope ? envelope.getElementsByTagNameNS(soap, 'Body')[0] : null;\n            const fault = body ? body.getElementsByTagNameNS(soap, 'Fault')[0] : null;\n\n            if (fault) {\n                return null;\n            }\n        }\n        return serverResponse;\n    }\n\n    function parseErrorResponse(serverResponse) {\n        let faultstring = '';\n        let statusCode = '';\n        let message = '';\n        let idStart = -1;\n        let idEnd = -1;\n\n        if (window.DOMParser) {\n            const stringResponse = uintToString(serverResponse);\n            const parser = new window.DOMParser();\n            const xmlDoc = parser.parseFromString(stringResponse, 'text/xml');\n            const envelope = xmlDoc ? xmlDoc.getElementsByTagNameNS(soap, 'Envelope')[0] : null;\n            const body = envelope ? envelope.getElementsByTagNameNS(soap, 'Body')[0] : null;\n            const fault = body ? body.getElementsByTagNameNS(soap, 'Fault')[0] : null;\n            const detail = fault ? fault.getElementsByTagName('detail')[0] : null;\n            const exception = detail ? detail.getElementsByTagName('Exception')[0] : null;\n            let node = null;\n\n            if (fault === null) {\n                return stringResponse;\n            }\n\n            node = fault.getElementsByTagName('faultstring')[0].firstChild;\n            faultstring = node ? node.nodeValue : null;\n\n            if (exception !== null) {\n                node = exception.getElementsByTagName('StatusCode')[0];\n                statusCode = node ? node.firstChild.nodeValue : null;\n                node = exception.getElementsByTagName('Message')[0];\n                message = node ? node.firstChild.nodeValue : null;\n                idStart = message ? message.lastIndexOf('[') + 1 : -1;\n                idEnd = message ? message.indexOf(']') : -1;\n                message = message ? message.substring(idStart, idEnd) : '';\n            }\n        }\n\n        let errorString = `code: ${statusCode}, name: ${faultstring}`;\n        if (message) {\n            errorString += `, message: ${message}`;\n        }\n\n        return errorString;\n    }\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(/*keySystemStr, messageType*/) {\n        return 'arraybuffer';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        return parseServerResponse.call(this, serverResponse);\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return parseErrorResponse.call(this, serverResponse);\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse\n    };\n\n    return instance;\n}\n\nPlayReady.__dashjs_factory_name = 'PlayReady';\nexport default dashjs.FactoryMaker.getSingletonFactory(PlayReady); /* jshint ignore:line */","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @ignore\n */\nfunction Widevine() {\n\n    let instance;\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(/*keySystemStr, messageType*/) {\n        return 'arraybuffer';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        return serverResponse;\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse\n    };\n\n    return instance;\n}\n\nWidevine.__dashjs_factory_name = 'Widevine';\nexport default dashjs.FactoryMaker.getSingletonFactory(Widevine); /* jshint ignore:line */","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @classdesc A collection of ClearKey encryption keys with an (optional) associated\n *  type\n * @ignore\n */\nclass ClearKeyKeySet {\n    /**\n     * @param {Array.<KeyPair>} keyPairs\n     * @param {string} type the type of keys in this set.  One of either 'persistent'\n     * or 'temporary'.  Can also be null or undefined.\n     * @class\n     * @ignore\n     */\n    constructor(keyPairs, type) {\n        if (type && type !== 'persistent' && type !== 'temporary')\n            throw new Error('Invalid ClearKey key set type!  Must be one of \\'persistent\\' or \\'temporary\\'');\n        this.keyPairs = keyPairs;\n        this.type = type;\n    }\n\n    /**\n     * Convert this key set to its JSON Web Key (JWK) representation\n     *\n     * @return {ArrayBuffer} JWK object UTF-8 encoded as ArrayBuffer\n     */\n    toJWK() {\n        let i;\n        let numKeys = this.keyPairs.length;\n        let jwk = {keys: []};\n\n        for (i = 0; i < numKeys; i++) {\n            let key = {\n                kty: 'oct',\n                alg: 'A128KW',\n                kid: this.keyPairs[i].keyID,\n                k: this.keyPairs[i].key\n            };\n            jwk.keys.push(key);\n        }\n        if (this.type) {\n            jwk.type = this.type;\n        }\n        let jwkString = JSON.stringify(jwk);\n        const len = jwkString.length;\n\n        // Convert JSON string to ArrayBuffer\n        let buf = new ArrayBuffer(len);\n        let bView = new Uint8Array(buf);\n        for (i = 0; i < len; i++)\n            bView[i] = jwkString.charCodeAt(i);\n        return buf;\n    }\n}\n\nexport default ClearKeyKeySet;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc EME-independent KeyMessage\n * @ignore\n */\nclass KeyMessage {\n    /**\n     * @param {SessionToken} sessionToken the session\n     * to which the key message is associated\n     * @param {ArrayBuffer} message the key message\n     * @param {string} defaultURL license acquisition URL provided by the CDM\n     * @param {string} messageType Supported message types can be found\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\n     * @class\n     */\n    constructor(sessionToken, message, defaultURL, messageType) {\n        this.sessionToken = sessionToken;\n        this.message = message;\n        this.defaultURL = defaultURL;\n        this.messageType = messageType ? messageType : 'license-request';\n    }\n}\n\nexport default KeyMessage;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Represents a 128-bit keyID and 128-bit encryption key\n * @ignore\n */\nclass KeyPair {\n    /**\n     * @param {string} keyID 128-bit key ID, base64 encoded, with no padding\n     * @param {string} key 128-bit encryption key, base64 encoded, with no padding\n     * @class\n     * @ignore\n     */\n    constructor(keyID, key) {\n        this.keyID = keyID;\n        this.key = key;\n    }\n}\n\nexport default KeyPair;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Creates a new key system access token.  Represents a valid key system for\n * given piece of content and key system requirements.  Used to initialize license\n * acquisition operations.\n * @ignore\n */\nclass KeySystemAccess {\n    /**\n     * @param {MediaPlayer.dependencies.protection.KeySystem} keySystem the key system\n     * @param {KeySystemConfiguration} ksConfiguration the\n     * subset of configurations passed to the key system access request that are supported\n     * by this user agent\n     * @class\n     * @ignore\n     */\n    constructor(keySystem, ksConfiguration) {\n        this.keySystem = keySystem;\n        this.ksConfiguration = ksConfiguration;\n    }\n}\n\nexport default KeySystemAccess;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @classdesc Represents a set of configurations that describe the capabilities desired for\n *  support by a given CDM\n * @ignore\n */\nclass KeySystemConfiguration {\n    /**\n     * @param {Array.<MediaCapability>} audioCapabilities array of\n     * desired audio capabilities.  Higher preference capabilities should be placed earlier\n     * in the array.\n     * @param {Array.<MediaCapability>} videoCapabilities array of\n     * desired video capabilities.  Higher preference capabilities should be placed earlier\n     * in the array.\n     * @param {string} distinctiveIdentifier desired use of distinctive identifiers.\n     * One of \"required\", \"optional\", or \"not-allowed\"\n     * @param {string} persistentState desired support for persistent storage of\n     * key systems.  One of \"required\", \"optional\", or \"not-allowed\"\n     * @param {Array.<string>} sessionTypes List of session types that must\n     * be supported by the key system\n     * @class\n     */\n    constructor(audioCapabilities, videoCapabilities, distinctiveIdentifier, persistentState, sessionTypes) {\n        this.initDataTypes = [ 'cenc' ];\n        if (audioCapabilities && audioCapabilities.length) {\n            this.audioCapabilities = audioCapabilities;\n        }\n        if (videoCapabilities && videoCapabilities.length) {\n            this.videoCapabilities = videoCapabilities;\n        }\n        this.distinctiveIdentifier = distinctiveIdentifier;\n        this.persistentState = persistentState;\n        this.sessionTypes = sessionTypes;\n    }\n}\n\nexport default KeySystemConfiguration;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Defines a license request\n * @ignore\n */\nclass LicenseRequest {\n    /**\n     * Defines a license request\n     *\n     * @class\n     */\n    constructor(url, method, responseType, headers, withCredentials, messageType, sessionId, data) {\n\n        /**\n         * The license request url\n         */\n        this.url = url;\n\n        /**\n         * The HTTP method\n         */\n        this.method = method;\n\n        /**\n         * The HTTP response type\n         */\n        this.responseType = responseType;\n\n        /**\n         * The HTP request headers\n         */\n        this.headers = headers;\n\n        /**\n         * Wether request is done using credentials (cross-site cookies)\n         */\n        this.withCredentials = withCredentials;\n\n        /**\n         * The license request message type (see https://www.w3.org/TR/encrypted-media/#dom-mediakeymessagetype)\n         */\n        this.messageType = messageType;\n\n        /**\n         * The corresponding EME session ID\n         */\n        this.sessionId = sessionId;\n\n        /**\n         * The license request data\n         */\n        this.data = data;\n    }\n}\n\nexport default LicenseRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Defines a license response\n */\nclass LicenseResponse {\n    /**\n     * Defines a license request\n     *\n     * @class\n     * @ignore\n     */\n    constructor(url, headers, data) {\n\n        /**\n         * The url that was loaded, that can be redirected from original request url\n         */\n        this.url = url;\n\n        /**\n         * The HTP response headers\n         */\n        this.headers = headers;\n\n        /**\n         * The license response data\n         */\n        this.data = data;\n    }\n}\n\nexport default LicenseResponse;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc A media capability\n * @ignore\n */\nclass MediaCapability {\n    /**\n     * @param {string} contentType MIME type and codecs (RFC6386)\n     * @param {string} robustness\n     * @class\n     * @ignore\n     */\n    constructor(contentType, robustness) {\n        this.contentType = contentType;\n        this.robustness = robustness;\n    }\n}\n\nexport default MediaCapability;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc NeedKey\n * @ignore\n */\nclass NeedKey {\n    /**\n     * @param {ArrayBuffer} initData the initialization data\n     * @param {string} initDataType initialization data type\n     * @class\n     */\n    constructor(initData, initDataType) {\n        this.initData = initData;\n        this.initDataType = initDataType;\n    }\n}\n\nexport default NeedKey;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass DashJSError {\n    constructor(code, message, data) {\n        this.code = code || null;\n        this.message = message || null;\n        this.data = data || null;\n    }\n}\n\nexport default DashJSError;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\n * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\n * by Metrics Reporting code.\n * @ignore\n */\nclass HTTPRequest {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Identifier of the TCP connection on which the HTTP request was sent.\n         * @public\n         */\n        this.tcpid = null;\n        /**\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\n         * The type of the request:\n         * - MPD\n         * - XLink expansion\n         * - Initialization Fragment\n         * - Index Fragment\n         * - Media Fragment\n         * - Bitstream Switching Fragment\n         * - other\n         * @public\n         */\n        this.type = null;\n        /**\n         * The original URL (before any redirects or failures)\n         * @public\n         */\n        this.url = null;\n        /**\n         * The actual URL requested, if different from above\n         * @public\n         */\n        this.actualurl = null;\n        /**\n         * The contents of the byte-range-spec part of the HTTP Range header.\n         * @public\n         */\n        this.range = null;\n        /**\n         * Real-Time | The real time at which the request was sent.\n         * @public\n         */\n        this.trequest = null;\n        /**\n         * Real-Time | The real time at which the first byte of the response was received.\n         * @public\n         */\n        this.tresponse = null;\n        /**\n         * The HTTP response code.\n         * @public\n         */\n        this.responsecode = null;\n        /**\n         * The duration of the throughput trace intervals (ms), for successful requests only.\n         * @public\n         */\n        this.interval = null;\n        /**\n         * Throughput traces, for successful requests only.\n         * @public\n         */\n        this.trace = [];\n\n        /**\n         * Type of stream (\"audio\" | \"video\" etc..)\n         * @public\n         */\n        this._stream = null;\n        /**\n         * Real-Time | The real time at which the request finished.\n         * @public\n         */\n        this._tfinish = null;\n        /**\n         * The duration of the media requests, if available, in seconds.\n         * @public\n         */\n        this._mediaduration = null;\n        /**\n         * The media segment quality\n         * @public\n         */\n        this._quality = null;\n        /**\n         * all the response headers from request.\n         * @public\n         */\n        this._responseHeaders = null;\n        /**\n         * The selected service location for the request. string.\n         * @public\n         */\n        this._serviceLocation = null;\n    }\n}\n\n/**\n * @classdesc This Object holds reference to the progress of the HTTPRequest.\n * @ignore\n */\nclass HTTPRequestTrace {\n    /**\n    * @class\n    */\n    constructor() {\n        /**\n         * Real-Time | Measurement stream start.\n         * @public\n         */\n        this.s = null;\n        /**\n         * Measurement stream duration (ms).\n         * @public\n         */\n        this.d = null;\n        /**\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\n         * @public\n         */\n        this.b = [];\n        /**\n         * Measurement throughput in kbits/s\n         * @public\n         */\n         this.t = null;\n    }\n}\n\nHTTPRequest.GET = 'GET';\nHTTPRequest.HEAD = 'HEAD';\nHTTPRequest.MPD_TYPE = 'MPD';\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\nHTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE = 'FragmentInfoSegment';\nHTTPRequest.LICENSE = 'license';\nHTTPRequest.OTHER_TYPE = 'other';\n\nexport { HTTPRequest, HTTPRequestTrace };\n"],"sourceRoot":""}